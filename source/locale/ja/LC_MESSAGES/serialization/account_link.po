# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-present, NEM
# This file is distributed under the same license as the symbol-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: symbol-docs 0.22.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-24 12:17+0000\n"
"PO-Revision-Date: 2020-06-19 17:53+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/serialization/account_link.rst:36
msgid "Account Link Schemas"
msgstr "アカウントリンクアクションスキーマ"

#: ../../source/serialization/account_link.rst:38
msgid ""
"The `catbuffer schemas <https://github.com/nemtech/catbuffer>`_ repository "
"defines how each transaction type should be serialized. In combination with "
"the `catbuffer-generators <https://github.com/nemtech/catbuffer-"
"generators>`_ project, developers can generate builder classes for a given "
"set of programming languages."
msgstr ""
"`catbuffer スキーマ <https://github.com/nemtech/catbuffer>`_ "
"リポジトリはどのように各トランザクションタイプがシリアライズされるべきかを定義しています。 `catbuffer-generators "
"<https://github.com/nemtech/catbuffer-generators>`_ "
"プロジェクトと組み合わせると、開発者は特定のプログラミング言語用のビルダークラスを生成できます。"

#: ../../source/serialization/account_link.rst:42
msgid "Account Key Link"
msgstr "アカウントキーリンク"

#: ../../source/serialization/account_link.rst:49
msgid ""
"This transaction is required for all accounts wanting to activate delegated "
"harvesting."
msgstr "このトランザクションはすべてのデリゲートハーベスティングを有効にしたいアカウントに必要です。"

#: ../../source/serialization/account_link.rst:51
msgid ""
"Announce an AccountKeyLinkTransaction to delegate the account importance "
"score to a proxy account."
msgstr ""
"アカウントのインポータンススコアをプロキシアカウントに移譲するために、AccountKeyLinkTransaction をアナウンスします。"

#: ../../source/serialization/account_link.rst:57
#: ../../source/serialization/account_link.rst:99
msgid "**Inlines**:"
msgstr "**インライン**"

#: ../../source/serialization/account_link.rst:59
#: ../../source/serialization/account_link.rst:101
msgid ""
":ref:`Transaction <transaction>` or :ref:`EmbeddedTransaction <embedded-"
"transaction>`"
msgstr ""
":ref:`Transaction <transaction>` または :ref:`EmbeddedTransaction <embedded-"
"transaction>`"

#: ../../source/serialization/account_link.rst:1
#: ../../source/serialization/account_link.rst:1
msgid "Linked public key."
msgstr "リンクした公開鍵"

#: ../../source/serialization/account_link.rst:1
#: ../../source/serialization/account_link.rst:1
msgid "Account link action."
msgstr "アカウントリンクアクション"

#: ../../source/serialization/account_link.rst:1
msgid "Unlink account."
msgstr "アカウントの関連付けをやめる"

#: ../../source/serialization/account_link.rst:1
msgid "Link account."
msgstr "アカウントを関連付ける"

#: ../../source/serialization/account_link.rst:84
msgid "Node Key Link"
msgstr "ノードキーリンク"

#: ../../source/serialization/account_link.rst:91
msgid ""
"This transaction is required for all accounts willing to activate delegated "
"harvesting."
msgstr "このトランザクションはすべてのデリゲートハーベスティングを有効にしたいアカウントに必要です。"

#: ../../source/serialization/account_link.rst:93
msgid ""
"Announce a NodeKeyLinkTransaction to link an account with a public key used "
"by TLS to create sessions."
msgstr "NodeKeyLinkTransaction をアナウンスして、TLS がセッションの作成に使用するアカウントを、公開鍵にリンクします。"
