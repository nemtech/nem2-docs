# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the symbol-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# David García <dgarcia360@outlook.com>, 2019
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.20.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-27 23:33+0000\n"
"PO-Revision-Date: 2019-09-30 13:12+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:18
msgid "Turning the asynchronous transaction announcement into synchronous"
msgstr "非同期なトランザクションのアナウンスを同期的に変える"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:24
msgid "Background"
msgstr "背景"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:26
msgid ""
"When announcing a transaction in NIS1, you had to wait to get the response "
"from the node. |codename| works differently: when a transaction is "
"announced, the REST API server will always return an OK. As a result, the "
"developer does not have to wait until the server returns a response, being "
"able to make more responsive apps. However, now is the developer's "
"responsibility to check the status of the transaction and ensure it is "
"confirmed."
msgstr ""
"NIS1 ではトランザクションがアナウンスされると、ノードからのレスポンスを待たなければいけませんでした。 |codename| "
"では異なる動作をします。トランザクションがアナウンスされると、REST API は常に OK "
"レスポンスを返します。これにより開発者はサーバがレスポンスを返却するのを待つ必要がなく、よりレスポンシブなアプリケーションの開発を可能になりました。しかし、トランザクションの状態や承認されたことを確認するのは開発者の責務になります。"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:36
msgid "Prerequisites"
msgstr "前提条件"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:38
msgid ""
"Finish :doc:`sending mosaics and messages between two accounts guide "
"<../transfer/sending-a-transfer-transaction>`"
msgstr ""
":doc:`モザイクとメッセージを２つのアカウント間で送信するガイド <../transfer/sending-a-transfer-"
"transaction>` を終了している"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:39
msgid ""
"Have one :ref:`account with network currency <setup-creating-a-test-"
"account>`"
msgstr ":ref:`ネットワーク通貨を持つアカウント <setup-creating-a-test-account>`"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:43
msgid "Sending a synchronous transaction"
msgstr "同期的トランザクションの送信"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:45
msgid ""
"Alice is developing an app to send 10 |privatenetworkcurrency| to Bob and "
"wants to know if the transaction has reached the network before sending Bob "
"an email."
msgstr ""
"Alice は Bob に 10 |privatenetworkcurrency| を送るアプリケーションを開発しています。彼女は Bob "
"にメールを送る前に、トランザクションがネットワークに到着したかどうかを知ろうとしています。"
