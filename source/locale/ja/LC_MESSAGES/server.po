# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.20.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-13 16:48+0000\n"
"PO-Revision-Date: 2019-06-13 10:27+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/server.rst:11
msgid "Server"
msgstr "サーバ"

#: ../../source/server.rst:13
msgid ""
"As a blockchain platform, |codename| relies on a decentralized network of "
"nodes to provide a powerful, stable, and secure platform for Smart Asset "
"transactions."
msgstr ""
"ブロックチェーンプラットフォームである |codename| "
"はスマートアセットトランザクションの強力で、安定した、安全なプラットフォームを提供するために、非中央集権ネットワークのノードに依存しています。"

#: ../../source/server.rst:15
msgid ""
"These nodes are deployed using |catapult-server| software, a C++ rewrite of "
"the previous Java-written NEM distributed ledger that has been running since"
" 2015."
msgstr ""
"これらのノードは2015年から稼働し続けてきた、従来 JAVA で書かれていた NEM 分散台帳を C++ でリライトした |catapult-"
"server| ソフトウェアを使用してデプロイされます。"

#: ../../source/server.rst:17
msgid ""
"Through its multi-tier architecture, it is possible to isolate the peer-to-"
"peer network and implement better API integration flows with the proposed "
"REST API layer."
msgstr ""
"その多層アーキテクチャーを通じて、ピアツーピアネットワークの分離と提案された REST API レイヤーを使用して、より優れた API "
"統合フローを実装することが可能です。"

#: ../../source/server.rst:19
msgid ""
"Also, |codename| offers private networks the ability to add their own "
"transaction types by developing **plugins** for the catapult-server nodes."
msgstr ""
"また |codename| ではプライベートネットワーク向けに catapult-server ノード用の **プラグイン** "
"を開発することで独自のトランザクションタイプを追加する機能を提供します。"

#: ../../source/server.rst:23
msgid "Installation"
msgstr "インストール"

#: ../../source/server.rst:25
msgid ""
"**Catapult server** can be used to configure three different types of "
":doc:`nodes <concepts/node>`:"
msgstr "**Catapult server** は異なる3種類の :doc:`ノード <concepts/node>` に設定することができます:"

#: ../../source/server.rst:27
msgid ""
"**Peer node**: The peer node verifies or discards the transactions once the "
"API pushes them into the P2P network. It runs the consensus algorithm, "
"creates new blocks, and propagates the changes through the network."
msgstr ""
"**Peer ノード**: Peer ノードは API がトランザクションを P2P "
"ネットワークにプッシュすると、それを検証または破棄します。ノードはコンセンサスアルゴリズムを実行して新しいブロックを作成し、そしてネットワークを通して変更を伝播します。"

#: ../../source/server.rst:28
msgid ""
"**API node**: The primary responsibility of the API node is to properly "
"store data in the MongoDB database once transactions are validated. They "
"also identify and store partial aggregate bonded transactions."
msgstr ""
"**API ノード**: API ノードの主な役割はトランザクションが検証された後に MongoDB "
"データベースにデータを正しく保存することです。これらはパーシャルなアグリゲートボンドトランザクションを識別して保存もします。"

#: ../../source/server.rst:29
msgid ""
"**Dual node**: The dual node combines a peer and API nodes into a single "
"server instance."
msgstr "**Dual ノード**: Dual ノードは Peer と API ノードを1つのサーバインスタンスにまとめたものです。"

#: ../../source/server.rst:31
msgid ""
"You can create a new catapult-server image following the building "
"|instructions|, but we recommend deploying your own network for development "
"or learning purposes with |catapult-service-bootstrap|."
msgstr ""
"ビルド |instructions| に従って新しいカタパルトサーバーイメージを作成できますが |catapult-service-bootstrap|"
" で開発目的または学習目的で独自のネットワークを展開することを推奨します。"

#: ../../source/server.rst:35
msgid "Package organization"
msgstr "パッケージ構成"

#: ../../source/server.rst:37
msgid "**Repository**: |catapult-server|"
msgstr "**リポジトリ:** |catapult-server|"

#: ../../source/server.rst:1
msgid "Folder name"
msgstr "フォルダ名"

#: ../../source/server.rst:1
msgid "Description"
msgstr "説明"

#: ../../source/server.rst:1
msgid ""
"Modules that add features to the bare catapult-server. They range from "
"extensions that are critical like consensus and networking to optional "
"extensions like ZMQ messaging and other API conveniences."
msgstr ""
"無垢な catapult-server に機能を追加するモジュール。それらはコンセンサスやネットワーキングのように重要な拡張から ZMQ "
"メッセージングのようなオプションの拡張やその他便利な API まで多岐にわたります。"

#: ../../source/server.rst:1
msgid "Implementations of the hashing algorithms used."
msgstr "使用しているハッシュアルゴリズムの実装。"

#: ../../source/server.rst:1
msgid ""
"Modules that introduce new and different ways to alter the chain's state via"
" transactions."
msgstr "トランザクション経由でチェーンの状態を変更するための新しい方法を紹介するモジュール。"

#: ../../source/server.rst:1
msgid "Node and network configurable properties."
msgstr "ノードとネットワークの設定可能プロパティ"

#: ../../source/server.rst:1
msgid "Utility scripts for developers."
msgstr "開発者向けユーティリティスクリプト"

#: ../../source/server.rst:1
msgid "Reusable code used by tests and tools."
msgstr "テストとツールによる再利用可能なコード"

#: ../../source/server.rst:1
msgid "Nemesis blocks used in tests."
msgstr "テスト用ネメシスブロック"

#: ../../source/server.rst:1
msgid "|codename|'s core engine."
msgstr "|codename| のコアエンジン"

#: ../../source/server.rst:1
msgid "Collection of tests."
msgstr "テストの集合"

#: ../../source/server.rst:1
msgid "Tools to deploy and monitor networks and nodes."
msgstr "ネットワークとノードをデプロイとモニタリングするツール"

#: ../../source/server.rst:58
msgid "Tools"
msgstr "ツール"

#: ../../source/server.rst:60
msgid ""
"Catapult server comes with tools to check the health of the network, "
"generate nemesis blocks, create keypairs, recover the server in the event of"
" an abrupt exit, and more."
msgstr ""
"Catapult サーバーにはネットワークの健全性チェック、nemesis "
"ブロックの生成、キーペアの作成、突然の終了時のサーバ復旧などを行うツールが付属しています。"

#: ../../source/server.rst:62
msgid "You can find them inside of ``catapult-server/build/bin``."
msgstr "それらは ``catapult-server/build/bin`` の中にあります。"

#: ../../source/server.rst:67
msgid "Generates keypairs and addresses."
msgstr "キーペアとアドレスの生成。"

#: ../../source/server.rst:69 ../../source/server.rst:104
#: ../../source/server.rst:133 ../../source/server.rst:160
#: ../../source/server.rst:181 ../../source/server.rst:200
msgid "Options"
msgstr "オプション"

#: ../../source/server.rst:87 ../../source/server.rst:122
#: ../../source/server.rst:149 ../../source/server.rst:170
#: ../../source/server.rst:189
msgid "Command"
msgstr "コマンド"

#: ../../source/server.rst:93
msgid "If you want the save the output, add an output stream at the end:"
msgstr "出力を保存したい場合は最後に出力ストリームを追加します:"

#: ../../source/server.rst:102
msgid ""
"Creates a nemesis block out of a `mijin-test.properties  "
"<https://github.com/nemtech/catapult-"
"server/blob/master/tools/nemgen/resources/mijin-test.properties>`_ file. The"
" output generated is used to start a new chain."
msgstr ""
"`mijin-test.properties <https://github.com/nemtech/catapult-"
"server/blob/master/tools/nemgen/resources/mijin-test.properties>`_ ファイルから "
"nemesis ブロックを生成します。この生成された出力は新しいチェーンの開始に使用されます。"

#: ../../source/server.rst:131
msgid ""
"Executes CPU-based performance tests of catapult functions, such as hashing "
"or encryption."
msgstr "ハッシュや暗号化など Catapult 機能のCPUベースのパフォーマンステストを実行します。"

#: ../../source/server.rst:158
msgid ""
"Outputs node info, partner node connectivity info, and a partner node table "
"for known peers within :properties:`peers-p2p.json <peers-p2p.json>` and "
":properties:`peers-api.json <peers-api.json>`."
msgstr ""
":properties:`peers-p2p.json <peers-p2p.json>` および :properties:`peers-"
"api.json <peers-api.json>` "
"内の既知のピアについて、ノード情報、パートナーノード接続情報、およびパートナーノードテーブルを出力します。"

#: ../../source/server.rst:179
msgid ""
"Generates the list of status errors that the server might return after "
"receiving a transaction."
msgstr "トランザクションの受信後にサーバが返却する可能性のあるステータスエラーのリストを生成します。"

#: ../../source/server.rst:198
msgid ""
"Checks the health and displays statistics (like the unconfirmed transaction "
"cache) for the nodes found inside of :properties:`peers-p2p.json <peers-"
"p2p.json>` and :properties:`peers-api.json <peers-api.json>`."
msgstr ""
":properties:`peers-p2p.json <peers-p2p.json>` および :properties:`peers-"
"api.json <peers-api.json>` "
"内のノードについて、健全性をチェックし、統計情報(未確認のトランザクションキャッシュなど)を表示します。"
