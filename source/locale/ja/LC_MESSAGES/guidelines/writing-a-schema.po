# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.17.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-20 22:54+0100\n"
"PO-Revision-Date: 2019-02-22 09:12+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/guidelines/writing-a-schema.rst:5
msgid "Writing a Schema"
msgstr "スキーマの記述"

#: ../../source/guidelines/writing-a-schema.rst:7
msgid ""
"Are you writing a new catapult plugin that includes a new transaction type?"
msgstr "新しいトランザクションタイプを含む、新しい Catapult プラグインを記述しようとしていますか？"

#: ../../source/guidelines/writing-a-schema.rst:9
msgid ""
"In this guide, we are examining how the `transfer.cats "
"<https://github.com/nemtech/catbuffer/blob/master/schemas/transfer/transfer.cats>`_"
" schema works. You can adapt the same steps to define a new schema."
msgstr ""
"このガイドでは `transfer.cats "
"<https://github.com/nemtech/catbuffer/blob/master/schemas/transfer/transfer.cats>`_"
" スキーマがどのように機能するかを試します。同じ手順を用いて新しいスキーマを定義することもできます。"

#: ../../source/guidelines/writing-a-schema.rst:13
msgid "Instructions"
msgstr "インストラクション"

#: ../../source/guidelines/writing-a-schema.rst:15
msgid "Clone the catbuffer repository."
msgstr "catbuffer リポジトリをクローンしてください。"

#: ../../source/guidelines/writing-a-schema.rst:21
msgid ""
"Create a new file under ``schemas`` folder. In our case, we have called the "
"file ``transfer.cats``."
msgstr "``schemas`` フォルダの下に新しいファイルを作成します。ここではファイルを ``transfer.cats`` とします。"

#: ../../source/guidelines/writing-a-schema.rst:23
msgid "Define the struct for the transaction body."
msgstr "トランザクション本体の構造体を定義。"

#: ../../source/guidelines/writing-a-schema.rst:25
msgid ""
"Think of a struct as a set of properties that we want to store in the same "
"block of memory."
msgstr "構造体を同じメモリブロックに格納したい一連のプロパティとして考えます。"

#: ../../source/guidelines/writing-a-schema.rst:27
msgid ""
"The transaction body contains the extra properties which differ from a basic"
" transaction. Each attribute can have one of the types defined in "
"`types.cats "
"<https://github.com/nemtech/catbuffer/blob/master/schemas/types.cats>`_."
msgstr ""

#: ../../source/guidelines/writing-a-schema.rst:44
msgid ""
"Define a second transaction struct in the same file. This will contain "
"information about the version of the entity and its identifier. The "
"underlying transaction properties and the particular transaction body are "
"appended as inlines."
msgstr ""

#: ../../source/guidelines/writing-a-schema.rst:57
msgid ""
"Define an EmbeddedTransaction struct to serialize the inner transactions "
"within an aggregate. The embedded transaction and the body transaction are "
"added as inlines."
msgstr ""

#: ../../source/guidelines/writing-a-schema.rst:67
msgid ""
"The catbuffer library allows you to generate the transaction builders from "
"the schema defined. For example, run the following command to generate C++ "
"code:"
msgstr ""

#: ../../source/guidelines/writing-a-schema.rst:73
msgid ""
"The generator creates the transaction builders file under "
"``_generated/cpp_builder`` folder."
msgstr "ジェネレータは ``_generated/cpp_builder`` フォルダの下にトランザクションビルダーファイルを作成します。"
