# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.17.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-20 22:54+0100\n"
"PO-Revision-Date: 2019-02-22 09:11+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/guidelines/sdk-development.rst:5
msgid "SDK Development"
msgstr "SDK 開発"

#: ../../source/guidelines/sdk-development.rst:7
msgid ""
"A key objective is that interoperability becomes a natural design of the "
"NEM2-SDK. Follow this guideline to collaborate creating a NEM SDK, achieving"
" the best quality with less effort."
msgstr ""
"相互運用性が NEM2-SDK の自然な設計とするのが主な目的です。このガイドラインに従って NEM SDK "
"を共同で作成することで、少ない労力で最高の品質を実現します。"

#: ../../source/guidelines/sdk-development.rst:9
msgid ""
"NEM2-SDK shares the same design/architecture between programming languages "
"to accomplish the next properties:"
msgstr "NEM2-SDK では以下のプロパティを実現するために、各プログラミング言語間で同じデザイン/アーキテクチャを共有しています:"

#: ../../source/guidelines/sdk-development.rst:11
msgid ""
"**Fast language adaptation**: There is a library for Java, but you need it "
"for C# for example. As both SDKs share the same design, you can re-write the"
" library faster, adapting the syntax to your language. It also applies to "
"examples, projects, applications..."
msgstr ""
"**素早く言語に適応する**: Java 用のライブラリがありますが、例えば C# 用を必要とするならば、どちらの SDK "
"も同じデザインを共有しているため、ライブラリを素早く書き直すことができ、構文を言語に合わせるだけです。それは例示、プロジェクト、アプリケーションなどにも適用されます。"

#: ../../source/guidelines/sdk-development.rst:13
msgid ""
"**Cohesion/shared knowledge across NEM developers**: Be able to change "
"between projects that use NEM, sharing the same design accompanied by the "
"best practices."
msgstr ""
"**NEM 開発者間での知識の凝縮/共有**: NEM を使用するプロジェクト間で、ベストプラクティスを伴う同じデザインを共有することができます。"

#: ../../source/guidelines/sdk-development.rst:15
msgid ""
"**Fast SDK updates**: Migrating any improvement from a NEM2-SDK "
"implementation to the rest is faster."
msgstr "**素早い SDK のアップデート**: NEM2-SDK の実装から、それ以外の残りについて1つの改善を移行することが素早く行えます。"

#: ../../source/guidelines/sdk-development.rst:17
msgid ""
"**Fewer bugs**: If any bug appears in one language, it is faster to check "
"and fix it."
msgstr "**少ないバグ**: ある言語でバグが発生したとき、それを素早く確認し、修正が行えます。"

#: ../../source/guidelines/sdk-development.rst:21
msgid "Architecture"
msgstr "アーキテクチャ"

#: ../../source/guidelines/sdk-development.rst:23
msgid "**Characteristics**"
msgstr "特徴"

#: ../../source/guidelines/sdk-development.rst:25
msgid ""
"**Standardized Contracts**: Guaranteeing interoperability and harmonization "
"of data models."
msgstr "**標準化された契約**: データモデルの相互運用性と調和を保証する。"

#: ../../source/guidelines/sdk-development.rst:26
msgid "**Loose Coupling**: Reducing the degree of component coupling fosters."
msgstr "**疎結合**: コンポーネントの結合度合いを取り除く。"

#: ../../source/guidelines/sdk-development.rst:27
msgid ""
"**Abstraction**: Increasing long-term consistency of interoperability and "
"allowing underlying components to evolve independently."
msgstr "**抽象化**: 相互運用性の長期的な一貫性を高め、基礎となるコンポーネントを独立して進化させる。"

#: ../../source/guidelines/sdk-development.rst:28
msgid ""
"**Reusability**: Enabling high-level interoperability between modules and "
"potential component consumers."
msgstr "**再利用性**: モジュールとコンポーネント利用者間での高いレベルの相互運用性。"

#: ../../source/guidelines/sdk-development.rst:29
msgid ""
"**Stateless**: Increasing availability and scalability of components "
"allowing them to interoperate more frequently and reliably."
msgstr "**ステートレス**: コンポーネントの可用性と拡張性を高め、より頻繁で信頼できる相互運用を可能にします。"

#: ../../source/guidelines/sdk-development.rst:30
msgid ""
"**Composability**: For components to be effectively composable they must be "
"interoperable."
msgstr "**合成性**: 効果的なコンポーネントの構成のために、相互運用可能でなければなりません。"

#: ../../source/guidelines/sdk-development.rst:32
msgid "**Reactive**"
msgstr "リアクティブ"

#: ../../source/guidelines/sdk-development.rst:34
msgid "NEM2-SDK uses ReactiveX Library intensely."
msgstr "NEM2-SDK は ReactiveX ライブラリを多用しています。"

#: ../../source/guidelines/sdk-development.rst:36
msgid ""
"**Functional**: Developers can avoid complex stateful programs using clean "
"input/output functions over observable streams."
msgstr ""
"**機能性**: 開発者はオブザーバブルなストリームにクリーンな入出力関数を使用して、複雑でステートフルなプログラムを避けることができます。"

#: ../../source/guidelines/sdk-development.rst:37
msgid ""
"**Less is more**: ReactiveX's operators often reduce what was once an "
"elaborate challenge into a few lines of code."
msgstr "**少ない事で多くの事を**: 大抵の場合、ReactiveX オペレータは複雑なコードを数行のコードへ還元します。"

#: ../../source/guidelines/sdk-development.rst:38
msgid ""
"**Async error handling**: Traditional try/catch is powerless for errors "
"handling in asynchronous computations, but ReactiveX will offer developers "
"the proper tools to handle these sort of errors."
msgstr ""
"**非同期的エラーハンドリング**: 伝統的な try/catch は非同期処理でのエラー処理には無力ですが、ReactiveX "
"はこれらのエラーを処理するための適切なツールを開発者に提供します。"

#: ../../source/guidelines/sdk-development.rst:39
msgid ""
"**Concurrency**: Observables and Schedulers in ReactiveX allow the "
"programmer to abstract away low-level threading, synchronization, and "
"concurrency issues."
msgstr ""
"**並列処理**: ReactiveX "
"のオブザーバブルとスケジューラは、プログラマへの低水準のスレッディング、同期、並行処理の実装を抽象化することができます。"

#: ../../source/guidelines/sdk-development.rst:40
msgid ""
"**Frontend**: Manipulation of UI events and API responses on the Web using "
"RxJS."
msgstr "**フロントエンド**: Web上で RxJS を使用したUIイベントとAPI応答の操作。"

#: ../../source/guidelines/sdk-development.rst:41
msgid ""
"**Backend**: Embrace ReactiveX's asynchronicity, enabling concurrency and "
"implementation independence."
msgstr "**バックエンド**: ReactiveX の非同期性を利用し、同時性と実装の独立性を可能にします。"

#: ../../source/guidelines/sdk-development.rst:43
msgid ""
"In case you are not familiar with ReactiveX and you still have to deliver "
"something fast, you can convert an observable to Promise/Future by reviewing"
" this |rp-promise-example|. However, **we encourage you to learn "
"ReactiveX**."
msgstr ""
"ReactiveX に精通しておらず、何か素早く成果物を提供しなければならない場合は、この |rp-promise-example| "
"を見てオブザーバブルなものを Promise/Future に変換することができます。それでも **ReactiveX を学習することを推奨** "
"します。"

#: ../../source/guidelines/sdk-development.rst:45
msgid "|rxjsinaction|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:46
msgid "|frp|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:47
msgid "|learnrxjs|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:48
msgid "|rp-wiki|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:49
msgid "|op-wiki|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:50
msgid "|reactivex|"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:53
msgid "Package Organization"
msgstr "パッケージ構成"

#: ../../source/guidelines/sdk-development.rst:59
msgid "Package organization diagram"
msgstr "パッケージ構成ダイアグラム"

#: ../../source/guidelines/sdk-development.rst:61
msgid "**Infrastructure**"
msgstr "インフラストラクチャ"

#: ../../source/guidelines/sdk-development.rst:63
msgid ""
"The HTTP requests are made following the Repository Pattern, and they return"
" NEM Domain immutable models via the Observable Pattern."
msgstr "HTTP リクエストはリポジトリパターンに則しており、これらはオブザーバルパターンを介して、NEM の変更不可なモデルを返します。"

#: ../../source/guidelines/sdk-development.rst:65
msgid "**Models**"
msgstr "**モデル**"

#: ../../source/guidelines/sdk-development.rst:67
msgid ""
"The NEM Domain models are, usually, immutable by definition. The developer "
"cannot change its attributes. Instead, the developers have to create new "
"Transactions and dispatch them to NEM Blockchain via TransactionHTTP, to "
"change the NEM Blockchain state."
msgstr ""
"NEM "
"ドメインモデルは通常は定義によっては不変ですが、開発者はその属性を変更できません。代わりに開発者は新しいトランザクションを作成し、TransactionHTTP"
" 経由で NEM ブロックチェーンに送り出して、NEM ブロックチェーン状態を変更する必要があります。"

#: ../../source/guidelines/sdk-development.rst:69
msgid "**Services**"
msgstr "**サービス**"

#: ../../source/guidelines/sdk-development.rst:71
msgid ""
"Common operations that require multiple :doc:`REST API <../api>` requests "
"are handled by services provided."
msgstr "複数の :doc:`REST API <../api>` 要求を必要とする一般的な操作は、提供されているサービスによって処理されます。"

#: ../../source/guidelines/sdk-development.rst:104
msgid "Before starting"
msgstr "始める前に"

#: ../../source/guidelines/sdk-development.rst:106
msgid ""
"Review the technical documentation to become familiar with the :doc:`NEM "
"built-in features<../concepts/account>`."
msgstr ":doc:`NEM ビルドイン機能<../concepts/account>` に詳しくなるためにはテクニカルドキュメントを見てください。"

#: ../../source/guidelines/sdk-development.rst:107
msgid ""
"Setup the `catapult in local environment via docker <https://github.com"
"/tech-bureau/catapult-service-bootstrap>`_."
msgstr ""
"`Docker を用いてローカル環境に Catapult を <https://github.com/tech-bureau/catapult-"
"service-bootstrap>`_ をセットアップします。"

#: ../../source/guidelines/sdk-development.rst:108
msgid ""
":doc:`Check the API reference <../api>` and play with the API endpoints."
msgstr ":doc:`API リファレンスを確認 <../api>` して、API エンドポイントを利用してみてください。"

#: ../../source/guidelines/sdk-development.rst:109
msgid ""
"Become familiar with the current :doc:`nem2-sdk via code examples "
"<../concepts/account>` & :doc:`nem2-cli <../cli>` ."
msgstr ""
"現在の :doc:`nem2-sdk のコード例 <../concepts/account>` と :doc:`nem2-cli <../cli>` "
"に詳しくなる。"

#: ../../source/guidelines/sdk-development.rst:110
msgid ""
"`Join "
"<https://join.slack.com/t/nem2/shared_invite/enQtMzY4MDc2NTg0ODgyLTFhZjgxM2NhYTQ1MTY1Mjk0ZDE2ZTJlYzUxYWYxYmJlYjAyY2EwNGM5NzgxMjM4MGEzMDc5ZDIwYTgzZjgyODM>`_"
" our Slack to ask Catapult related questions."
msgstr ""
"Catapult に関する質問は Slack "
"`<https://join.slack.com/t/nem2/shared_invite/enQtMzY4MDc2NTg0ODgyLTFhZjgxM2NhYTQ1MTY1Mjk0ZDE2ZTJlYzUxYWYxYmJlYjAyY2EwNGM5NzgxMjM4MGEzMDc5ZDIwYTgzZjgyODM>`_"
" にて受け付けています。"

#: ../../source/guidelines/sdk-development.rst:111
msgid ""
"Be sure no one is already working on the SDK you want to create. Check the "
":doc:`repository list <../sdk>` and  comment your intentions in  nem2 slack "
"``#sig-api`` channel. If someone is already working on it, we suggest you "
"collaborate with him/her."
msgstr ""
"作成しようとしている SDK にまだ誰も取り組んでいないことを確認してください。:doc:`リポジトリリスト <../sdk>` をチェックし nem2"
" slack の ``#sig-api`` "
"チャンネルであなたの意向をコメントしてください。すでに誰かがそれに取り組んでいた場合は彼/彼女と協力することを推奨します。"

#: ../../source/guidelines/sdk-development.rst:112
msgid ""
"Claim the SDK `forking this repository "
"<https://help.github.com/en/articles/creating-a-pull-request/>`_ and add a "
"new entry to the :doc:`repository list <../sdk>`."
msgstr ""
"`このリポジトリをフォークしている <https://help.github.com/en/articles/creating-a-pull-"
"request/>`_ そのSDK を要求して :doc:`リポジトリリスト <../sdk>` に新しいエントリを追加してください。"

#: ../../source/guidelines/sdk-development.rst:116
msgid "Development"
msgstr "開発"

#: ../../source/guidelines/sdk-development.rst:118
msgid ""
"You can base your work in `TypeScript <https://github.com/nemtech/nem2-sdk-"
"typescript-javascript>`_. The TypeScript version is the first SDK getting "
"the latest updates. Meanwhile, Java takes longer to be updated."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:120
msgid ""
"Regularly check the `Changelog <https://github.com/nemtech/nem2-sdk-"
"typescript-javascript/blob/master/CHANGELOG.md>`_ to be sure you didn't miss"
" any code change update."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:123
msgid "Creating the project"
msgstr "プロジェクトの作成"

#: ../../source/guidelines/sdk-development.rst:125
msgid ""
"Add a README with the instructions to install the SDK. You can find "
":download:`a template here <../resources/templates/README_SDK.md>`."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:127
msgid ""
"Add a `Code of Conduct <https://help.github.com/articles/adding-a-code-of-"
"conduct-to-your-project/>`_.  Download :download:`a sample code of conduct "
"here <../resources/templates/CODE_OF_CONDUCT.md>`."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:129
msgid ""
"Add a `Contributors guidelines <https://help.github.com/articles/setting-"
"guidelines-for-repository-contributors/>`_ to help others know how they can "
"help you. Find :download:`here a CONTRIBUTING.md "
"template<../resources/templates/CONTRIBUTING.md>`."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:130
msgid ""
"Setup the Continuous Integration system. We use `travis-ci <https://travis-"
"ci.org/>`_, but feel free to use the one suits you best."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:132
msgid ""
"A project with a good test coverage it's more likely to be used and trusted "
"by the developers!"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:134
msgid ""
"We **strongly** suggest to do `Test-Driven Development "
"<https://en.wikipedia.org/wiki/Test-driven_development>`_ or Unit-Testing "
"(test last). If you need inspiration, you can adapt the same `tests we did "
"<https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/tree/master/test>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:138
msgid "API Wrapper"
msgstr "API ラッパー"

#: ../../source/guidelines/sdk-development.rst:140
msgid ""
"The `OpenAPI Generator <https://openapi-generator.tech/>`_  handles the API "
"generation. It supports multiple languages, and hopefully, yours is on the "
"list."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:142
msgid ""
"These are the steps we are following to generate the Typescript DTOs (data "
"transfer objects):"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:144
msgid "Download the latest Open API definition."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:152
msgid ""
"`Open API definition "
"<https://raw.githubusercontent.com/nemtech/nem2-docs/master/source/resources/collections/swagger2.yaml>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:154
msgid ""
"Copy the ``templates folder`` from ``{nem2-sdk-typescript-"
"javascript}/infrastructure/`` into a new folder."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:156
msgid "Download the OpenAPI generator and generate the DTOs."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:163
msgid ""
"`Swagger Codegen instructions <https://github.com/swagger-api/swagger-"
"codegen#development-in-docker>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:165
msgid ""
"As the typescript generator does not recognize ``enum`` type alias, we need "
"to manually move enum classes into the ``enumsMap`` list. You can jump this "
"step if the code generator for your language supports them."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:167
msgid ""
"Open the generated file ``./nem2-ts-sdk/model/models.ts`` in your favorite "
"editor."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:168
msgid "Search for line contains ``let enumsMap: {[index: string]: any}``."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:169
msgid ""
"Move all ``xxxTypeEnum`` entries from below ``typeMap`` into ``enumsMap``."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:171
msgid "Example:"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:240
msgid ""
"Copy the generated files into the `nem2-sdk infrastructure folder "
"<https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/tree/master/src/infrastructure>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:242
msgid ""
"6. Drop the generated client classes and implement them using the "
"`Repository pattern <https://martinfowler.com/eaaCatalog/repository.html>`_ "
"returning `Observables <https://en.wikipedia.org/wiki/Observer_pattern>`_ of"
" `ReactiveX <http://reactivex.io/>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:246
msgid "Example of a Repository and HTTP implementation:"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:248
msgid ""
"`BlockchainRepository <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/infrastructure/BlockRepository.ts>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:250
msgid ""
"`BlockchainHttp <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/infrastructure/BlockHttp.ts>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:252
msgid ""
"The **repositories return models instead of DTOs**. You will need to code "
"the models before finishing the API wrapper."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:255
msgid "Models"
msgstr "モデル"

#: ../../source/guidelines/sdk-development.rst:257
msgid ""
"The `models <https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/sdk/model>`_ are by default immutable "
"and aim to hide the complexity, like type conversion or relationship between"
" objects."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:259
msgid ""
"You will find in the different implementations different invariants to "
"ensure the object is well constructed and a nicer API is published."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:261
msgid "Particular decisions to consider:"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:263
msgid ""
"``uint64`` support: meanwhile `Java supports big numbers "
"<https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html>`_, for"
" example JavaScript doesn't. The JavaScript SDK has a custom class to handle"
" the `uint64 types <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/UInt64.ts>`_. If your language supports "
"``uint64`` use that implementation instead."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:264
msgid ""
"API conversions: Sometimes, the data returned by API is compressed. You "
"might need to convert those types for the user."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:266
msgid ""
"`Namespace <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/namespace/NamespaceId.ts>`_ ID:  At "
"creation time you add the string name, but when you receive the Namespace "
"from the network, it comes in formatted as ``uint64`` ID. A specific "
"endpoint returns the Namespace ``string`` name."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:269
msgid "Transaction Serialization"
msgstr "トランザクションのシリアル化"

#: ../../source/guidelines/sdk-development.rst:271
msgid ""
"A Transaction needs a particular serialization schema in binary optimized in"
" size."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:273
msgid "**Generate the buffer classes**"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:275
msgid ""
"This section is incomplete. It will be updated with complete information "
"once the first SDK integrates the builders generated with `catbuffer "
"<https://github.com/nemtech/catbuffer>`_ library."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:277
msgid "**Create the schema classes**"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:279
msgid ""
"`Schema class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Schema.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:280
msgid ""
"`SchemaAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/SchemaAttribute.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:281
msgid ""
"`ScalarAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ScalarAttribute.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:282
msgid ""
"`ArrayAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/ArrayAttribute.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:283
msgid ""
"`TableAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TableAttribute.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:284
msgid ""
"`TableArrayAttribute class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TableArrayAttribute.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:285
msgid ""
"`Constants class <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Constants.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:287
msgid "**Create the transaction schemas**"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:289
msgid ""
"Each transaction has a schemas. It has the same type as ``catbuffer "
"schemas`` but using the ``Schema`` class. It's used to know where each "
"component is located in the ``catbuffer schema`` and remove the unnecessary "
"bytes to create the optimized serialization."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:291
msgid ""
"Example: `TransferTransactionSchema <https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TransferTransactionSchema.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:293
msgid "**Using the schemas in the transaction models**"
msgstr "**トランザクションモデルでスキーマを使用する**"

#: ../../source/guidelines/sdk-development.rst:295
msgid ""
"The Transaction class has the abstract method `generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/Transaction.java#L159>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:297
msgid ""
"Each Transaction has to implement and use the previous classes, the Buffers "
"and the Schemas, to serialize the transaction."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:299
msgid ""
"Example:  `TransferTransaction.generateBytes() "
"<https://github.com/nemtech/nem2-sdk-"
"java/blob/master/src/main/java/io/nem/sdk/model/transaction/TransferTransaction.java>`_."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:301
msgid ""
"Do not forget to implement the `Cosignatory  "
"<https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/sdk/model/transaction>`_ classes."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:304
msgid "KeyPair and Cryptographic functions"
msgstr "キーペアと暗号化関数"

#: ../../source/guidelines/sdk-development.rst:306
msgid "This section is incomplete."
msgstr "このセクションは未完了です。"

#: ../../source/guidelines/sdk-development.rst:308
msgid ""
"Implementing the cryptographic functions is required to sign transactions."
msgstr "トランザクションに署名するには暗号化の機能を実装する必要があります。"

#: ../../source/guidelines/sdk-development.rst:310
msgid ""
"Example: `core/crypto <https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/core/crypto>`_"
msgstr ""
"例: `core/crypto <https://github.com/nemtech/nem2-sdk-"
"java/tree/master/src/main/java/io/nem/core/crypto>`_"

#: ../../source/guidelines/sdk-development.rst:314
msgid "Documenting your SDK"
msgstr "あなたの SDK のドキュメント化"

#: ../../source/guidelines/sdk-development.rst:316
msgid ""
"The SDKs need to be adopted by other developers. As a contributor, no one "
"knows better than you how a determined SDK works. Consider helping others "
"and spread the usage of the SDK by providing :doc:`the following "
"documentation <sdk-documentation>`."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:320
msgid "Publishing the SDK as official"
msgstr "公式として公開されているSDK"

#: ../../source/guidelines/sdk-development.rst:322
msgid ""
"To make an SDK officially supported, submit it as a `NIP "
"<https://github.com/nemtech/NIP/blob/master/NIPs/nip-0001.md>`_. The reason "
"behind the NEM2 Improvement Proposal is to ensure that the new libraries are"
" reviewed, tested and shared among NEM developers."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:326
msgid "Future work"
msgstr "今後の成果物"

#: ../../source/guidelines/sdk-development.rst:328
msgid ""
"The current guideline shows what is done up to today since the SDK isn't "
"complete. It will get updates according to the latest architecture/features."
msgstr ""

#: ../../source/guidelines/sdk-development.rst:332
msgid "Recommended Licenses"
msgstr "推奨するライセンス"

#: ../../source/guidelines/sdk-development.rst:334
msgid "MIT: `Expat/MIT/X11 license <https://opensource.org/licenses/MIT>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:335
msgid ""
"Apache-2.0: `Apache License, version 2.0 "
"<http://www.apache.org/licenses/LICENSE-2.0>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:337
msgid ""
"BSD-2-Clause: `OSI-approved BSD 2-clause license "
"<https://opensource.org/licenses/BSD-2-Clause>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:339
msgid ""
"BSD-3-Clause: `OSI-approved BSD 3-clause license "
"<https://opensource.org/licenses/BSD-3-Clause>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:341
msgid ""
"CC0-1.0: `Creative Commons CC0 1.0 Universal "
"<https://creativecommons.org/publicdomain/zero/1.0/>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:343
msgid ""
"GNU-All-Permissive: `GNU All-Permissive License "
"<http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-"
"Files.html>`_"
msgstr ""

#: ../../source/guidelines/sdk-development.rst:345
msgid ""
"LGPL-2.1+: `GNU Lesser General Public License (LGPL), version 2.1 or newer "
"<http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html>`_"
msgstr ""
