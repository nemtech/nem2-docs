# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# David García <dgarcia360@outlook.com>, 2019
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.19.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-26 07:39+0000\n"
"PO-Revision-Date: 2019-02-22 09:04+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/concepts/aggregate-transaction.rst:3
msgid "Aggregate Transaction"
msgstr "アグリゲートトランザクション"

#: ../../source/concepts/aggregate-transaction.rst:7
msgid ""
"Aggregate transactions merge multiple transactions into one, allowing "
"**trustless swaps**, and other advanced logic. Catapult does this by "
"generating a one-time disposable smart contract."
msgstr ""
"アグリゲートトランザクションは複数のトランザクションを一つにまとめ、 **トラストレスな交換** や高度なロジックを可能にします。Catapult "
"は一度きりの破棄可能なスマートコントラクトを生成することでこれを実現しています。"

#: ../../source/concepts/aggregate-transaction.rst:13
msgid "Example of an AggregateTransaction between two participants"
msgstr "2人の参加者間における AggregateTransaction の例"

#: ../../source/concepts/aggregate-transaction.rst:15
msgid ""
"When all involved :doc:`accounts <../concepts/account>` have cosigned the "
"AggregateTransaction, all the inner transactions are executed at the same "
"time."
msgstr ""
"AggregateTransaction へ全ての :doc:`アカウント <../concepts/account>` "
"が署名をすると、全てのインナートランザクションは同時に実行されます。"

#: ../../source/concepts/aggregate-transaction.rst:21
msgid "Aggregate complete"
msgstr "アグリゲートコンプリート"

#: ../../source/concepts/aggregate-transaction.rst:23
msgid ""
"An AggregateTransaction is  **complete** when all the required participants "
"have signed it."
msgstr "要求されている参加者全員が署名した場合、AggregateTransaction は **コンプリート** になります。"

#: ../../source/concepts/aggregate-transaction.rst:25
msgid ""
"The cosigners can sign the transaction without using the blockchain. Once it"
" has all the required signatures, one of them can announce it to the "
"network. If the inner transaction setup is valid, and there is no validation"
" error, the transactions will get executed at the same time."
msgstr ""
"連署者はそのトランザクションに、ブロックチェーンを使うことなく署名することができます。必要な署名をすべて取得したら、彼らのうちの1人がネットワークにアナウンスできます。インナートランザクションのセットアップが正当で、バリデーションエラーがない場合、トランザクションは同時に実行されます。"

#: ../../source/concepts/aggregate-transaction.rst:27
msgid ""
"Aggregate complete transactions enable adding more transactions per block by"
" gathering multiple inner transactions."
msgstr ""
"アグリゲートコンプリートトランザクションは、複数のインナートランザクションを集めることで、ブロックへさらに多くのトランザクションを追加できます。"

#: ../../source/concepts/aggregate-transaction.rst:33
msgid "Aggregate bonded"
msgstr "アグリゲートボンド"

#: ../../source/concepts/aggregate-transaction.rst:35
msgid ""
"An AggregateTransaction is **bonded** when it requires signatures from other"
" participants."
msgstr "他の参加者からの署名が必要な場合、AggregateTransaction は **ボンデッド** になります。"

#: ../../source/concepts/aggregate-transaction.rst:37
msgid ""
"Before announcing an **AggregateBondedTransaction**, an account must "
"announce and get confirmed a :ref:`HashLockTransaction<hash-lock-"
"transaction>` locking ``10 cat.currency``."
msgstr ""
"**AggregateBondedTransaction** を送信する前に、アカウントは :ref:`HashLockTransaction "
"<hash-lock-transaction>` をアナウンスして承認されており ``10 cat.currency`` をロックしなければなりません。"

#: ../../source/concepts/aggregate-transaction.rst:39
msgid ""
"Once an aggregate bonded is announced, it reaches partial state and notifies"
" its status through WebSockets or HTTP API calls."
msgstr ""
"アグリゲートボンドがアナウンスされると、パーシャル状態になり、WebSocket または HTTP API 呼び出しによって状態を通知します。"

#: ../../source/concepts/aggregate-transaction.rst:41
msgid ""
"Every time a cosignatory signs the transaction and :ref:`announces an "
"aggregate bonded cosignature <cosignature>`, the network checks if all the "
"required cosigners have signed. When all signatures are acquired, the "
"transaction changes to unconfirmed state until the network includes it in a "
"block."
msgstr ""
"連署者がトランザクションに署名し :ref:`アグリゲートボンド連署をアナウンスする <cosignature>` "
"たびに、ネットワークは必要な連署者が署名しているかどうかをチェックします。すべての署名が取得されると、ネットワークがそれをブロックに含めるまで、トランザクションは未承認状態へ遷移します。"

#: ../../source/concepts/aggregate-transaction.rst:47
msgid "AggregateBondedTransaction cycle"
msgstr "AggregateBondedTransaction サイクル"

#: ../../source/concepts/aggregate-transaction.rst:51
msgid "Examples"
msgstr "例"

#: ../../source/concepts/aggregate-transaction.rst:54
msgid "Sending multiple transactions together"
msgstr "複数のトランザクションを同時に送信"

#: ../../source/concepts/aggregate-transaction.rst:56
msgid ""
"Dan announces an AggregateTransaction that merges two transfer transactions."
msgstr "Dan は二つの転送トランザクションを集約した AggregateTransaction をアナウンスします。"

#: ../../source/concepts/aggregate-transaction.rst:58
msgid ""
"As Dan is the only required signatory, the transaction is considered "
"complete after he signed. After announcing it to the network, Alice and Bob "
"will receive the mosaics at the same time."
msgstr ""
"Dan が唯一必須の署名者なので、署名した後にトランザクションはコンプリートと見なされます。これがネットワークへアナウンスされると、Alice と "
"Bob は同時にモザイクを受け取るでしょう。"

#: ../../source/concepts/aggregate-transaction.rst:64
msgid "Sending payouts with aggregate complete transactions"
msgstr "アグリゲート完了トランザクションによって支払を送信する"

#: ../../source/concepts/aggregate-transaction.rst:67
msgid "Multi-asset escrowed transactions"
msgstr "マルチアセットエスクロートランザクション"

#: ../../source/concepts/aggregate-transaction.rst:69
msgid ""
"In this example, Alice is buying tickets with ``currency.euro`` :doc:`mosaic"
" <mosaic>`. When the ticket distributor cosigns the AggregateTransaction, "
"the swap will happen atomically."
msgstr ""
"この例では Alice がチケットを ``currency:euro``  :doc:`モザイク <mosaic>` で購入しています。チケット販売者は"
" AggregateTransaction に署名し、交換はアトミックに起こります。"

#: ../../source/concepts/aggregate-transaction.rst:75
msgid "Multi-Asset Escrowed Transactions"
msgstr "マルチアセットエスクロートランザクション"

#: ../../source/concepts/aggregate-transaction.rst:78
#: ../../source/concepts/aggregate-transaction.rst:90
msgid "Paying for others fees"
msgstr "他人の手数料を支払う"

#: ../../source/concepts/aggregate-transaction.rst:80
msgid ""
"Alice sends 10 ``currency.euro`` to Bob using an app to make payments. But "
"Alice doesn't own cat.currency to pay the transaction fee."
msgstr ""
"Alice は 10 ``currency.euro`` を Bob "
"へ支払うためにアプリで送ります。しかし彼女はブロックチェーンのトランザクション手数料を支払う分の cat.currency を持っていません。"

#: ../../source/concepts/aggregate-transaction.rst:82
msgid ""
"By creating an AggregateBondedTransaction, Alice can convert EUR to "
"cat.currency to pay the fee. Now, Alice and Bob can use Catapult's public "
"blockchain without ever having to buy or hold cat.currency units."
msgstr ""
"AggregateBondedTransaction を作ることで、彼女は EUR を手数料のための cat.currency "
"に替えることができます。これで Alice と Bob は cat.currency を購入したり保有することなく、Catapult "
"のパブリックブロックチェーンを使うことができます。"

#: ../../source/concepts/aggregate-transaction.rst:84
msgid ""
"Since the app creator can put their own branding on the open source payment "
"app, Alice and Bob may not even know they are using blockchain."
msgstr ""
"アプリの製作者は、オープンソースの支払いアプリに独自ブランドを付けることができるので、Alice と Bob "
"は彼らがブロックチェーンを使っていることすら知らないでしょう。"

#: ../../source/concepts/aggregate-transaction.rst:94
msgid "Guides"
msgstr "ガイド"

#: ../../source/concepts/aggregate-transaction.rst:106
msgid "Transaction schemas"
msgstr "トランザクションスキーマ"

#: ../../source/concepts/aggregate-transaction.rst:111
msgid ""
"Announce an AggregateTransaction to combine multiple transactions together."
msgstr "複数の転送トランザクションを集約するために AggregateTransaction をアナウンスします。"

#: ../../source/concepts/aggregate-transaction.rst:113
#: ../../source/concepts/aggregate-transaction.rst:178
msgid "**Version**: 0x01"
msgstr "**バージョン**: 0x01"

#: ../../source/concepts/aggregate-transaction.rst:117
#: ../../source/concepts/aggregate-transaction.rst:138
#: ../../source/concepts/aggregate-transaction.rst:182
msgid "**Inlines**:"
msgstr "**インライン**"

#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Property"
msgstr "プロパティ"

#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Type"
msgstr "タイプ"

#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Description"
msgstr "説明"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Aggregate hash of the aggregate transaction."
msgstr "アグリゲートトランザクションのハッシュの集約"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"Transaction payload size in bytes. In other words, the total number of bytes"
" occupied by all inner transactions."
msgstr "バイト単位のトランザクションのペイロードサイズ。つまりインナートランザクションすべてによって占有されている合計バイト数。"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"Reserved padding to align end of AggregateTransactionHeader on 8-byte "
"boundary."
msgstr "AggregateTransactionHeader の終わりを 8 バイト境界に揃えた予約パディング"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"Array of inner transactions.  An AggregateTransaction can contain up to "
"``1000`` inner transactions involving up to ``15`` different cosignatories. "
"Other aggregate transactions are not allowed as inner transactions."
msgstr ""
"内包されたトランザクションの配列です。AggregateTransaction は ``1000`` までのインナートランザクションを内包でき "
"``15`` までの連署者を設定できます。他のアグリゲートトランザクションをインナートランザクションとして内包することはできません。"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"Array of transaction :ref:`cosignatures <cosignature>`. Fills the remaining "
"body space after transactions."
msgstr ":ref:`連署者 <cosignature>` トランザクションの配列。トランザクションの後ろの残りの本体スペースを埋めます。"

#: ../../source/concepts/aggregate-transaction.rst:136
msgid ""
"Cosignature transactions are used to sign :ref:`announced "
"AggregateBondedTransactions <aggregate-transaction>` with missing "
"cosignatures."
msgstr ""
"署名トランザクションは、まだ署名の揃っていない :ref:`アナウンス済みの AggregateBondedTransactions "
"<aggregate-transaction>` への署名に使用します。"

#: ../../source/concepts/aggregate-transaction.rst:140
msgid ":ref:`Cosignature <cosignature-transaction>`"
msgstr ":ref:`連署者 <cosignature-transaction>`"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid "AggregateBondedTransaction hash to cosign."
msgstr "署名すべき AggregateBondedTransaction ハッシュ"

#: ../../source/concepts/aggregate-transaction.rst:153
#: ../../source/concepts/aggregate-transaction.rst:184
msgid ""
":ref:`Transaction <transaction>` or :ref:`EmbeddedTransaction <embedded-"
"transaction>`"
msgstr ""
":ref:`Transaction <transaction>` または :ref:`EmbeddedTransaction <embedded-"
"transaction>`"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Cosigner public key."
msgstr "連署者の公開鍵"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid "Transaction signature."
msgstr "トランザクションの署名"

#: ../../source/concepts/aggregate-transaction.rst:170
msgid ""
"Lock funds with a HashLockTransaction before sending an "
":ref:`AggregateBondedTransaction<aggregate-transaction>`. This transaction "
"prevents spamming the partial cache with transactions that never will "
"complete."
msgstr ""
":ref:`AggregateBondedTransaction <aggregate-transaction>` を送信する前に "
"HashLockTransaction "
"で資産をロックします。このトランザクションは決して完了しないトランザクションで部分キャッシュをスパムすることを防止します。"

#: ../../source/concepts/aggregate-transaction.rst:172
msgid ""
"After enough funds are locked (``10 cat.currency`` by default), the "
"AggregateTransaction can be announced and added into the partial "
"transactions cache."
msgstr ""
"十分な資金 (デフォルトでは ``10 cat.currency``) がロックされた後、AggregateTransaction "
"をアナウンスして部分トランザクションキャッシュに追加することができます。"

#: ../../source/concepts/aggregate-transaction.rst:174
msgid ""
"It's not necessary to sign the aggregate and its HashLockTransaction with "
"the same account. For example, if Bob wants to announce an aggregate and "
"does not have enough funds to announce a HashLockTransaction, he can ask "
"Alice to send the hash lock funds transaction for him sharing the signed "
"AggregateTransaction hash."
msgstr ""
"アグリゲートとその HashLockTransaction に同じアカウントで署名する必要はありません。たとえば、ボブがアグリゲートをアナウンスしたいが"
" HashLockTransaction をアナウンスするのに十分な資産がない場合、彼はアリスに署名された AggregateTransaction "
"ハッシュを共有するハッシュロックファンドトランザクションを送信するように依頼できます。"

#: ../../source/concepts/aggregate-transaction.rst:176
msgid ""
"Upon completion of the aggregate, the locked funds become available in the "
"account that signed the initial HashLockTransaction. If the "
"AggregateBondedTransaction duration is reached without being signed by all "
"cosignatories, the locked amount becomes a reward collected by the block "
"harvester at the height where the lock expires."
msgstr ""
"アグリゲートが完了するとロックされた資金は最初の HashLockTransaction "
"に署名したアカウントへ返還されます。すべての連署者によって署名されずに AggregateBondedTransaction "
"が期限に到達した場合、ロックされた資産はブロックのハーベスタによってロックの有効期限が切れるブロック高でハーベストされて報酬となります。"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"Number of blocks for which a lock should be valid. Duration is allowed to "
"lie up to ``2`` days."
msgstr "ロックを有効にするブロックの数。期間は ``2`` 日までが許可されています。"

#: ../../source/concepts/aggregate-transaction.rst:1
msgid ""
"AggregateBondedTransaction hash that has to be confirmed before unlocking "
"the mosaics."
msgstr "モザイクをアンロックする前に、AggregateBondedTransaction ハッシュが承認されていなければなりません。"

#: ../../source/concepts/aggregate-transaction.rst:194
msgid "Continue: :doc:`Account Restrictions <account-restriction>`."
msgstr "次へ: :doc:`アカウント制限 <account-restriction>`"
