# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.18.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-18 16:56+0100\n"
"PO-Revision-Date: 2019-02-22 09:05+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/concepts/node.rst:3
msgid "Node"
msgstr "ノード"

#: ../../source/concepts/node.rst:5
msgid ""
"The NEM blockchain platform is built from a network of nodes. These nodes "
"provide a powerful, stable, and secure platform where Smart Assets "
"transactions are conducted, searched, and immutably logged on the blockchain"
" ledger."
msgstr ""
"NEM "
"ブロックチェーンプラットフォームはノードのネットワークによって構築されています。これらのノードはスマートアセットのトランザクションを実行、検索し、速やかにブロックチェーン台帳へ記録する、強力で、安定した、安全なプラットフォームを提供します。"

#: ../../source/concepts/node.rst:11
msgid "Catapult’s Performance Advantage: A Four-Layered Architecture"
msgstr "Catapult のパフォーマンス優位性: 4層アーキテクチャ"

#: ../../source/concepts/node.rst:13
msgid ""
"The four-layered architecture allows developers to update any of these tiers"
" without disrupting the others, which improves security."
msgstr "4層アーキテクチャにより、開発者に他の層への影響を避けたアップデートを可能にし、セキュリティを向上させることができます。"

#: ../../source/concepts/node.rst:17
msgid "Peer node"
msgstr "Peer ノード"

#: ../../source/concepts/node.rst:19 ../../source/concepts/node.rst:60
msgid "**Repository:** |catapult-server|"
msgstr "**リポジトリ:** |catapult-server|"

#: ../../source/concepts/node.rst:25
msgid "Peer node communication"
msgstr "Peer ノードコミュニケーション"

#: ../../source/concepts/node.rst:27
msgid ""
"The peer nodes form the backbone of the blockchain, making the network "
"robust since it cannot be shut down by eliminating a single entity. The role"
" of the node is to :ref:`verify transactions <transaction-validation>` and "
":doc:`blocks<block>`, run the consensus algorithm, create new blocks, and "
"propagate the changes through the network."
msgstr ""
"Peer "
"ノードは、単一のエンティティを排除してもシャットダウンできない、堅牢なネットワークであるブロックチェーンのバックボーンを構成します。ノードの役割は "
":ref:`トランザクション <transaction-validation>` と :doc:`ブロック <block>` "
"を検証すること、コンセンサスアルゴリズムの実行、新しいブロックの生成、ネットワークへの変更の伝播を実行することです。"

#: ../../source/concepts/node.rst:29
msgid ""
"The API nodes push new transactions to the P2P network, where they are "
":doc:`included in a block <harvesting>` or discarded. After the block is "
"processed, the node saves:"
msgstr ""
"API ノードが新しいトランザクションを P2P ネットワークにプッシュすると、それらは :doc:`ブロックに含まれる <harvesting>` "
"かまたは廃棄されます。ノードはブロックが処理された後にそれを保存します:"

#: ../../source/concepts/node.rst:31
msgid "The binary of each block as a flat-file on disk."
msgstr "各ブロックのバイナリはフラットなファイルとしてディスクに記録されます。"

#: ../../source/concepts/node.rst:32
msgid "The updated chain state in memory or RocksDB (configurable)."
msgstr "更新されたチェーンの状態はメモリまたは RocksDB にあります。(設定可能)"

#: ../../source/concepts/node.rst:35
msgid "RocksDB"
msgstr ""

#: ../../source/concepts/node.rst:37
msgid ""
"Peer nodes store the chain state in |rocksdb|. The data structures cached "
"are serialized and stored as values to corresponding keys. For example, one "
"particular column maps the public keys to addresses. Another one, the "
"account state entries as the values to corresponding address keys."
msgstr ""
"Peer ノードは |rocksdb| "
"へチェーンの状態を保存します。このキャッシュされたデータ構造はシリアライズされ、対応するキーに値として保存されます。例えば、ある特定の列は公開鍵をアドレスにマップします。他には、対応するアドレスをキーの値とした、アカウント状態のエントリです。"

#: ../../source/concepts/node.rst:39
msgid ""
"Storing the state in memory is usually faster than using RocksDB. However, "
"storing state information in RocksDB demands less memory of the network "
"nodes."
msgstr ""
"RocksDB を使用するよりも状態をメモリに保存しておくことのほうがより高速になります。しかし状態の情報を RocksDB "
"に保存しておくことで、ネットワークのノードが必要とするメモリを少なくできます。"

#: ../../source/concepts/node.rst:41
msgid ""
"Persisting the state in RocksDB is convenient in networks with a large "
"number of accounts."
msgstr "RocksDB 上の状態を保持することは、大量のアカウントが存在するネットワークにおいて都合が良いです。"

#: ../../source/concepts/node.rst:44
msgid "Node reputation"
msgstr "ノードレピュテーション"

#: ../../source/concepts/node.rst:46
msgid ""
"Public networks enable anyone to run a node. Some of these nodes could share"
" invalid information or try to disturb the network."
msgstr ""
"パブリックネットワークでは誰でもノードを実行できます。これらのノードの中には無効な情報を共有したり、ネットワークを妨害しようとするものがあります。"

#: ../../source/concepts/node.rst:48
msgid ""
"To reduce miscommunication attempts, the nodes keep track of the results of "
"preceding communications. Every node with P2P capabilities keeps a success "
"and a failure counter for every other peer node that it has interacted with."
msgstr ""
"誤解の機会を減らすために、ノードは先行する通信の結果を追跡します。P2P 機能を持つすべてのノードはそれが対話した他のすべての Peer "
"ノードについて成功および失敗カウンタを保持します。"

#: ../../source/concepts/node.rst:50
msgid ""
"Nodes update the counters accordingly after processing the data requested. "
"If a node successfully connects to a remote peer, it first increments the "
"success counter towards the remote peer. If the communication attempt fails,"
"  the node increments the remote peer’s failure counter. Likewise, the node "
"updates the peer counters accordingly after processing data shared."
msgstr ""
"ノードは要求されたデータの処理をした後に、それに応じてカウンタを更新します。ノードがリモートピアへの接続に成功すると、最初にリモートピアに対しての成功カウンタをインクリメントします。通信の試行が失敗した場合、ノードはリモートピアの失敗カウンタを増やします。同様にノードは共有データの処理後にピアカウンタを適宜更新します。"

#: ../../source/concepts/node.rst:52
msgid ""
"Extrapolating from these scores, the node assigns a weight between 500 and "
"10000 to every peer reached."
msgstr "これらのスコアから推定して、ノードは到達したすべてのピアに500〜10000の重みを割り当てます。"

#: ../../source/concepts/node.rst:54
msgid ""
"The probability of selecting a remote node to read data from depends "
"linearly on its weight. Every four rounds of node selections, the criteria "
"changes to prevent |sybil|. Then the node selects a peer with high "
"importance."
msgstr ""
"データを読み取るリモートノードを選択する確率はその重みに比例します。4回のノード選択ごとに条件が変更され |sybil| "
"が防止されます。ノードは重要度の高いピアを選択します。"

#: ../../source/concepts/node.rst:58
msgid "API node"
msgstr "API ノード"

#: ../../source/concepts/node.rst:66
msgid "API node communication"
msgstr "API ノードコミュニケーション"

#: ../../source/concepts/node.rst:68
msgid ""
"The catapult-server software allows you to configure peer nodes as API "
"nodes. The primary responsibility of an API node is to store the data in a "
"readable form in MongoDB."
msgstr ""
"Catapult サーバソフトウェアは Peer ノードを API ノードとして設定できます。API ノードの主たる役割は MongoDB "
"にデータを読み取り可能な形式で格納することです。"

#: ../../source/concepts/node.rst:70
msgid ""
"Instead of writing the data directly into MongoDB, the nodes write it into a"
" file-based queue called ``spool``. A broker service consumes the data from "
"the spool and updates MongoDB accordingly. Once a block is processed, the "
"broker service notifies the changes to catapult-rest instances using ZMQ."
msgstr ""
"データを MongoDB に直接書き込む代わりに、ノードはそれを ``spool`` "
"と呼ばれるファイルベースのキューに書き込みます。ブローカーサービスはスプールからのデータを消費し、それに応じて MongoDB "
"を更新します。ブロックが処理されると、ブローカーサービスは ZMQ を使用して Catapult REST インスタンスへの変更を通知します。"

#: ../../source/concepts/node.rst:72
msgid ""
"API nodes are also responsible for collecting the cosignatures of "
":doc:`aggregated bonded transactions <aggregate-transaction>`, which are "
"only processed once they are complete."
msgstr ""
"API ノードは :doc:`アグリゲートボンドトランザクション<aggregate-transaction>` "
"の連署名を集める役割も果たし、それが完成したときにだけ処理されます。"

#: ../../source/concepts/node.rst:75
msgid "MongoDB"
msgstr ""

#: ../../source/concepts/node.rst:77
msgid ""
"|mongodb| stores blocks, transactions, and chain states for high query "
"performance."
msgstr "|mongodb| はブロック、トランザクションとチェーン状態をハイパフォーマンスの実現のために保存します。"

#: ../../source/concepts/node.rst:79
msgid "The broker service updates the linked MongoDB instance when:"
msgstr "次の場合にブローカーサービスはリンクした MongoDB を更新します:"

#: ../../source/concepts/node.rst:81
msgid "A new block / a bunch of blocks finish processing."
msgstr "新しいブロック/ブロックの束の処理が終了します。"

#: ../../source/concepts/node.rst:82
msgid "New unconfirmed transactions complete processing."
msgstr "新しい未承認トランザクションの処理を完了します。"

#: ../../source/concepts/node.rst:84
msgid "MongoDB should not be accessed externally."
msgstr "MongoDB は外部からアクセスされるべきではありません。"

#: ../../source/concepts/node.rst:87
msgid "ZMQ"
msgstr ""

#: ../../source/concepts/node.rst:89
msgid ""
"|zmq| is an asynchronous messaging library, which enables real-time "
"subscriptions. It transports notifications from the API node to the ZMQ "
"endpoint, where Catapult REST listens. It is an alternative to REST "
"WebSockets, aimed to be used when performance is critical."
msgstr ""
"|zmq| はリアルタイムの購読を可能にする非同期メッセージングライブラリです。API ノードから ZMQ エンドポイントに通知を転送し、それを "
"Catapult REST が購読します。これは REST WebSocket "
"に代わるもので、パフォーマンスが重要な場合に使用することを目的としています。"

#: ../../source/concepts/node.rst:93
msgid "REST node"
msgstr "REST ノード"

#: ../../source/concepts/node.rst:95
msgid "**Repository:** |catapult-rest|"
msgstr "**リポジトリ:** |catapult-rest|"

#: ../../source/concepts/node.rst:101
msgid "REST node communication"
msgstr "REST ノードコミュニケーション"

#: ../../source/concepts/node.rst:103
msgid ""
"The REST nodes handle :doc:`JSON API <../api>` client requests. A node reads"
" from MongoDB, formats the response, and returns it to the client. This "
"component is also responsible for returning events to the client using "
":ref:`WebSockets <websockets>`."
msgstr ""
"Catapult REST ノードは :doc:`JSON API <../api>` クライアントリクエストを処理します。ノードは MongoDB "
"から読み取り、レスポンスをフォーマットして、それをクライアントに返却します。このコンポーネントは :ref:`WebSockets "
"<websockets>` でクライアントにイベントを返却する役割も果たします。"

#: ../../source/concepts/node.rst:105
msgid ""
"Each REST node connects to one API instance to send new transactions "
"requests triggered from the client-side and receive updates in real-time "
"using sockets."
msgstr ""
"各 REST ノードは1つの API "
"インスタンスに接続して、クライアントサイドからトリガーされた新しいトランザクション要求を送信し、ソケットを使用してリアルタイムで更新を受信します。"

#: ../../source/concepts/node.rst:133
msgid "Guides"
msgstr "ガイド"

#: ../../source/concepts/node.rst:135
msgid "|running-catapult-locally|"
msgstr ""

#: ../../source/concepts/node.rst:137
msgid "Deploy a Catapult full node for learning and development purposes."
msgstr "Catapult フルノードを学習と開発目的でデプロイする。"

#: ../../source/concepts/node.rst:143
msgid ""
"**Deploying a test net node** (:doc:`upcoming <../guidelines/suggesting-"
"changes>`)"
msgstr "**テストネットノードのデプロイ** (:doc:`乞うご期待 <../guidelines/suggesting-changes>`)"

#: ../../source/concepts/node.rst:145
msgid ""
"**Configuring a private network** (:doc:`upcoming <../guidelines/suggesting-"
"changes>`)"
msgstr "**プライベートネットワークの設定** (:doc:`乞うご期待 <../guidelines/suggesting-changes>`)"

#: ../../source/concepts/node.rst:147
msgid ""
"**Creating a custom plugin** (:doc:`upcoming <../guidelines/suggesting-"
"changes>`)"
msgstr "**カスタムプラグインの作成** (:doc:`乞うご期待 <../guidelines/suggesting-changes>`)"
