# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.19.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-26 07:39+0000\n"
"PO-Revision-Date: 2019-02-22 09:04+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/concepts/cross-chain-swaps.rst:3
msgid "Cross-Chain Swaps"
msgstr "クロスチェーンスワップ"

#: ../../source/concepts/cross-chain-swaps.rst:5
msgid ""
"A cross-chain swap enables **trading tokens** across **different "
"blockchains**, without using an intermediary party (e.g. an exchange "
"service) in the process."
msgstr ""
"クロスチェーントランザクションは、過程に第三者(例: 両替サービス)が入ることなく、 **異なるブロックチェーン** 間での **トークントレード** "
"を可能にします。"

#: ../../source/concepts/cross-chain-swaps.rst:11
msgid "Atomic cross-chain swap between public and private network"
msgstr "パブリックとプライベート間のアトミッククロスチェイン交換"

#: ../../source/concepts/cross-chain-swaps.rst:13
msgid ""
"In order to create a trustless environment for an exchange, a specific "
"transaction type is required that is commonly referred to as **Hashed "
"TimeLock Contract** (HTLC). Two additional components characterize this "
"transaction type: *hashlocks* and *timelocks*. A thorough explanation can be"
" found on the `Bitcoin Wiki "
"<https://en.bitcoin.it/wiki/Hashed_Timelock_Contracts>`_."
msgstr ""
"トラストレスな交換環境を作るために、特定のトランザクションが要求されます。一般的に **Hashed TimeLock Contract** "
"(HTLC)と呼ばれる特定のトランザクションタイプが必要です。このトランザクションタイプは *ハッシュロック* と *タイムロック* "
"の2つの追加コンポーネントによって特徴付けられます。徹底した説明は `Bitcoin Wiki "
"<https://en.bitcoin.it/wiki/Hashed_Timelock_Contracts>`_ で閲覧できます。"

#: ../../source/concepts/cross-chain-swaps.rst:15
msgid ""
"In other words, to reduce counterparty risk, the receiver of a payment needs"
" to present a proof for the transaction to execute. Failing to do so, the "
"locked funds are released after the deadline is reached, even if just one "
"actor does not agree."
msgstr ""
"つまり、カウンターパーティーリスクを軽減させるために、支払の受信者はトランザクションを実行するための証拠を提示する必要があります。それに失敗した場合、1人のアクタだけが同意しなくても、期限に到達した後にロックファンドはリリースされます。"

#: ../../source/concepts/cross-chain-swaps.rst:19
msgid "Protocol"
msgstr "プロトコル"

#: ../../source/concepts/cross-chain-swaps.rst:21
msgid ""
"Alice and Bob want to exchange **10 alice tokens for 10 bob tokens**. The "
"problem is that they are not in the same blockchain: alice token is defined "
"in Catapult's public chain, whereas bob token is only present in a private "
"chain using Catapult technology."
msgstr ""
"Alice と Bob は **10 alice:tokens を 10 bob:tokens** "
"に交換したいと思っています。課題は彼らが同じブロックチェーン上に存在していないことです: alice:token は Catapult "
"のパブリックチェーン上に、一方で bob:token は Catapult テクノロジーによるプライベートネットワーク上に定義されています。"

#: ../../source/concepts/cross-chain-swaps.rst:23
msgid ""
"Catapult's private and future public chain share the SDK. You could "
"implement atomic cross-chain swap between blockchains that use different "
"technologies if they permit the :ref:`secret lock/proof mechanism <lock-"
"hash-algorithm>`."
msgstr ""
"Catapult のプライベートと将来のパブリックチェーンは SDK を共有しています。 :ref:`シークレットロック/プルーフメカニズム "
"<lock-hash-algorithm>` が許可されているなら、別のテクノロジーによるブロックチェーン間でもアトミックスワップを実装できるでしょう。"

#: ../../source/concepts/cross-chain-swaps.rst:29
msgid ""
"Alice generates a random set of bytes called ``proof``. The proof should "
"have a size between ``10`` and ``1000`` bytes."
msgstr ""
"Alice は ``proof`` と呼ばれるランダムなバイトを生成します。proof は ``10`` から ``1000`` "
"バイトの間でなければなりません。"

#: ../../source/concepts/cross-chain-swaps.rst:31
msgid ""
"Alice hashes the obtained proof with one of the :ref:`available algorithms "
"<lock-hash-algorithm>` to generate the ``secret``."
msgstr ""
"Alice は得られた proof を :ref:`利用可能なアルゴリズム <lock-hash-algorithm>` の1つでハッシュ化して "
"``secret`` を生成します。"

#: ../../source/concepts/cross-chain-swaps.rst:33
msgid ""
"Alice defines the :ref:`SecretLockTransaction <secret-lock-transaction>` "
"**TX1**:"
msgstr ""
"Alice は :ref:`SecretLockTransaction <secret-lock-transaction>` **TX1** "
"を定義します:"

#: ../../source/concepts/cross-chain-swaps.rst:35
msgid "Mosaic: 10 alice token"
msgstr "モザイク: 10 alice token"

#: ../../source/concepts/cross-chain-swaps.rst:36
msgid "Recipient: Bob's address (Private Chain)"
msgstr "受信者: Bob のアドレス (プライベートチェーン )"

#: ../../source/concepts/cross-chain-swaps.rst:37
#: ../../source/concepts/cross-chain-swaps.rst:48
msgid "Algorithm: h"
msgstr "アルゴリズム: h"

#: ../../source/concepts/cross-chain-swaps.rst:38
#: ../../source/concepts/cross-chain-swaps.rst:49
msgid "Secret:  h(proof)"
msgstr "シークレット:  h(proof)"

#: ../../source/concepts/cross-chain-swaps.rst:39
msgid "Duration: 96h"
msgstr "期間: 96h"

#: ../../source/concepts/cross-chain-swaps.rst:40
msgid "Network: Private Chain"
msgstr "ネットワーク: プライベートチェーン"

#: ../../source/concepts/cross-chain-swaps.rst:42
msgid ""
"Alice **announces TX1 to the private network** and **shares with Bob the "
"secret**."
msgstr "Alice は **TX1 をプライベートネットワークへアナウンス** し **Bob とシークレットを共有** します。"

#: ../../source/concepts/cross-chain-swaps.rst:44
msgid ""
"Bob defines announces the following **SecretLockTransaction TX2** to the "
"**public network**:"
msgstr "Bob は以下の **SecretLockTransaction TX2** を **パブリックネットワーク** へアナウンスします。"

#: ../../source/concepts/cross-chain-swaps.rst:46
msgid "Mosaic: 10 bob token"
msgstr "モザイク: 10 bob token"

#: ../../source/concepts/cross-chain-swaps.rst:47
msgid "Recipient: Alice's address (Public Chain)"
msgstr "受信者: Alice のアドレス (パブリックチェーン )"

#: ../../source/concepts/cross-chain-swaps.rst:50
msgid "Duration: 84h"
msgstr "期間: 84h"

#: ../../source/concepts/cross-chain-swaps.rst:51
msgid "Network: Public Chain"
msgstr "ネットワーク: パブリックチェーン"

#: ../../source/concepts/cross-chain-swaps.rst:53
msgid ""
"The amount of time in which funds can be unlocked should be a smaller time "
"frame than TX1's. Alice knows the secret, so Bob must be sure he will have "
"some time left after Alice releases the secret."
msgstr ""
"資産をアンロックできる時間は、TX1 のタイムフレームよりも短くする必要があります。Alice はシークレットを知っていて、Bob "
"はそれを確信しているので、Alice がシークレットを公開したあとに、彼にはいくらかの時間があるでしょう。"

#: ../../source/concepts/cross-chain-swaps.rst:55
msgid ""
"Alice announces the :ref:`SecretProofTransaction <secret-proof-transaction>`"
" **TX3** to the **public network**. This transaction defines the encrypting "
"algorithm used, the original proof and the secret."
msgstr ""
"Alice は :ref:`SecretProofTransaction <secret-proof-transaction>` **TX3** を "
"**パブリックネットワーク** へアナウンスします。このトランザクションは使用している暗号化アルゴリズム、オリジナルの証明とシークレットを定義します。"

#: ../../source/concepts/cross-chain-swaps.rst:57
msgid ""
"Once TX3 is confirmed, the **proof** is revealed. **TX2 transaction is "
"unlocked** and Alice receives the locked funds."
msgstr ""
"TX3 が承認されると **proof** が明かされます。**TX2 トランザクションはアンロック** されて Alice "
"はロックされた資産を受け取ります。"

#: ../../source/concepts/cross-chain-swaps.rst:59
msgid ""
"Bob picks the proof and announces the **SecretProofTransaction TX4** to the "
"**private network**, receiving the locked funds from **TX1**."
msgstr ""
"Bob は proof を手に入れて **SecretProofTransaction TX4** を **プライベートネットワーク** "
"へアナウンスし、ロックされた資産を **TX1** から受け取ります。"

#: ../../source/concepts/cross-chain-swaps.rst:63
msgid "Guides"
msgstr "ガイド"

#: ../../source/concepts/cross-chain-swaps.rst:82
msgid ""
"Use a SecretLockTransaction to transfer mosaics between two accounts. The "
"specified mosaics remain locked until a valid :ref:`SecretProofTransaction "
"<secret-proof-transaction>` unlocks them."
msgstr ""
"2 つのアカウント間でモザイクを転送するにはSecretLockTransactionを使用します。特定のモザイクは妥当な "
":ref:`SecretProofTransaction <secret-proof-transaction>` "
"がそれらをアンロックするまで、ロックされたままになります。"

#: ../../source/concepts/cross-chain-swaps.rst:84
msgid ""
"If the transaction duration is reached without being proved, the locked "
"amount goes back to the initiator of the SecretLockTransaction."
msgstr ""
"トランザクションが証明されずに期間に到達した場合、ロックされた総量はSecretLockTransactionを開始したアカウントへ戻ります。"

#: ../../source/concepts/cross-chain-swaps.rst:86
#: ../../source/concepts/cross-chain-swaps.rst:113
msgid "**Version**: 0x01"
msgstr "**バージョン**: 0x01"

#: ../../source/concepts/cross-chain-swaps.rst:90
#: ../../source/concepts/cross-chain-swaps.rst:117
msgid "**Inlines**:"
msgstr "**インライン**"

#: ../../source/concepts/cross-chain-swaps.rst:92
#: ../../source/concepts/cross-chain-swaps.rst:119
msgid ""
":ref:`Transaction <transaction>` or :ref:`EmbeddedTransaction <embedded-"
"transaction>`"
msgstr ""
":ref:`Transaction <transaction>` または :ref:`EmbeddedTransaction <embedded-"
"transaction>`"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Property"
msgstr "プロパティ"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Type"
msgstr "タイプ"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Description"
msgstr "説明"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Proof hashed."
msgstr "ハッシュ化された証明"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Locked mosaic."
msgstr "ロックされたモザイク"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid ""
"Number of blocks for which a lock should be valid. Duration is allowed to "
"lie up to ``30`` days. If reached, the mosaics will be returned to the "
"initiator."
msgstr "ロックを有効にするブロックの数。期間は ``30`` 日までが許可されています。到達した場合はモザイクが開始者へ返還されます。"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Algorithm used to hash the proof."
msgstr "proof に使用されているハッシュアルゴリズム"

#: ../../source/concepts/cross-chain-swaps.rst:1
#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Address that receives the funds once unlocked."
msgstr "ロック解除後、ファンドを受け取るアドレス"

#: ../../source/concepts/cross-chain-swaps.rst:109
msgid ""
"Use a SecretProofTransaction to unlock :ref:`SecretLockTransactions <secret-"
"lock-transaction>`."
msgstr ""
"SecretProofTransactionは :ref:`SecretLockTransactions <secret-lock-"
"transaction>` のアンロックに使用します。"

#: ../../source/concepts/cross-chain-swaps.rst:111
msgid ""
"The transaction must prove that it knows the *proof* that unlocks the "
"mosaics."
msgstr "トランザクションはモザイクをアンロックするための *proof* を証明しなければなりません。"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Proof size in bytes."
msgstr "バイト換算のプルーフサイズ"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Original random set of bytes."
msgstr "元のランダムなバイト列"

#: ../../source/concepts/cross-chain-swaps.rst:136
msgid "The list of supported hashing algorithms."
msgstr "サポートされているハッシュアルゴリズムのリスト"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Proof is hashed using SHA3-256."
msgstr "SHA3-256 によってハッシュ化された proof"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Proof is hashed using Keccak (ETH compatibility)."
msgstr "Keccak によってハッシュ化された proof (ETH 互換)"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid ""
"Proof is hashed twice: first with SHA-256 and then with RIPEMD-160 "
"(bitcoin's OP_HASH160)."
msgstr ""
"最初に SHA-256 を、その後 RIPEMD-160 によって2回のハッシュ化された proof (bitcoin's OP_HASH160)"

#: ../../source/concepts/cross-chain-swaps.rst:1
msgid "Proof is hashed twice with SHA-256 (bitcoin's OP_HASH256)."
msgstr "SHA-256 によって2回のハッシュ化されたproof (bitcoin's OP_HASH256)"

#: ../../source/concepts/cross-chain-swaps.rst:149
msgid "Continue: :doc:`Cryptography <cryptography>`."
msgstr "次へ: :doc:`暗号手法 <cryptography>`"
