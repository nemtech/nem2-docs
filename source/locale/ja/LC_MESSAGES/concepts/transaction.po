# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NEM
# This file is distributed under the same license as the nem2-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nem2-docs 0.20.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-17 10:11+0000\n"
"PO-Revision-Date: 2019-02-22 09:05+0000\n"
"Last-Translator: Yoshiyuki Ieyama <yukku0423+github@gmail.com>, 2019\n"
"Language-Team: Japanese (https://www.transifex.com/nemtech/teams/95744/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/concepts/transaction.rst:3
#: ../../source/concepts/transaction.rst:219
msgid "Transaction"
msgstr "トランザクション"

#: ../../source/concepts/transaction.rst:5
msgid ""
"A transaction generally represents a unit of work within a database system. "
"In the case of blockchain, that is when an action signed by an :doc:`account"
" <account>` changes its state."
msgstr ""
"一般的にトランザクションとはデータベースシステム内での作業単位を表します。ブロックチェーンにおいては、 :doc:`アカウント <account>` "
"によって署名されたアクションが、それ自身の状態を変えるときを指します。"

#: ../../source/concepts/transaction.rst:9
msgid "Transaction types"
msgstr "トランザクションタイプ"

#: ../../source/concepts/transaction.rst:13
msgid ""
"There are different types of transactions. For example, you can transfer "
":doc:`mosaics <mosaic>` between accounts, transfer or configure the "
"ownership of accounts (including the use of :doc:`multisig <multisig-"
"account>` rules), and more."
msgstr ""
"異なる種類のトランザクションがあります。例えば、 :doc:`モザイク <mosaic>` "
"をアカウント間で転送できたり、アカウントの所有権を転送または構築( :doc:`マルチシグ <multisig-account>` "
"ルールも含めて)などたくさんあります。"

#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
msgid "Type"
msgstr "タイプ"

#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
msgid "Description"
msgstr "説明"

#: ../../source/concepts/transaction.rst:1
msgid "**Remote harvesting**"
msgstr "**リモートハーベスティング**"

#: ../../source/concepts/transaction.rst:1
msgid "Delegate the account importance to a proxy account."
msgstr "アカウントのインポータンスをプロキシアカウントへ移譲する。"

#: ../../source/concepts/transaction.rst:1
msgid "Send transactions in batches to different accounts."
msgstr "異なるアカウントにトランザクションをバッチ送信します。"

#: ../../source/concepts/transaction.rst:1
msgid "Propose an arrangement of transactions between different accounts."
msgstr "異なるアカウント間のトランザクションの手配を提案します。"

#: ../../source/concepts/transaction.rst:1
msgid "Cosign an AggregateBondedTransaction."
msgstr "AggregateBondedTransaction へ連署します。"

#: ../../source/concepts/transaction.rst:1
msgid "**Mosaic**"
msgstr "**モザイク**"

#: ../../source/concepts/transaction.rst:1
msgid "Register a new mosaic."
msgstr "新しいモザイクの取得"

#: ../../source/concepts/transaction.rst:1
msgid "Change an existent mosaic supply."
msgstr "既存モザイク供給量の変更をします。"

#: ../../source/concepts/transaction.rst:1
msgid "**Namespace**"
msgstr "**ネームスペース**"

#: ../../source/concepts/transaction.rst:1
msgid "Register namespaces to organize your assets."
msgstr "ネームスペースを登録してアセットを整理します。"

#: ../../source/concepts/transaction.rst:1
msgid "Attach a namespace name to an account."
msgstr "アカウントにネームスペースをアタッチする。"

#: ../../source/concepts/transaction.rst:1
msgid "Attach a namespace name to a mosaic."
msgstr "ネームスペースをモザイクにアタッチする。"

#: ../../source/concepts/transaction.rst:1
msgid "Associate a key-value state to an account."
msgstr "アカウントに Key-Value 状態を関連付けます。"

#: ../../source/concepts/transaction.rst:1
msgid "Associate a key-value state to a mosaic."
msgstr "モザイクに Key-Value 状態を関連付けます。"

#: ../../source/concepts/transaction.rst:1
msgid "Associate a key-value state to a namespace."
msgstr "ネームスペースに Key-Value 状態を関連付けます。"

#: ../../source/concepts/transaction.rst:1
msgid "Create or modify a multisig contract."
msgstr "マルチシグコントラクトの作成と変更"

#: ../../source/concepts/transaction.rst:1
msgid "Lock a deposit needed to announce aggregate bonded transactions."
msgstr "アグリゲートボンドトランザクションのアナウンスに必要なデポジットをロック"

#: ../../source/concepts/transaction.rst:1
msgid "Start a token swap between different chains."
msgstr "異なるチェーン間でのトークンスワップの開始。"

#: ../../source/concepts/transaction.rst:1
msgid "Conclude a token swap between different chains."
msgstr "異なるチェーン間でのトークンスワップの完結。"

#: ../../source/concepts/transaction.rst:1
msgid ""
"Allow or block incoming and outgoing transactions for a given a set of "
"addresses."
msgstr "与えられたアドレスを含む送受信トランザクションの許可/ブロックします。"

#: ../../source/concepts/transaction.rst:1
msgid ""
"Allow or block incoming transactions containing a given set of mosaics."
msgstr "与えられたモザイクを含む受信トランザクションの許可/ブロックします。"

#: ../../source/concepts/transaction.rst:1
msgid "Allow or block outgoing transactions by transaction type."
msgstr "トランザクションタイプによる送信トランザクションの許可/ブロックします。"

#: ../../source/concepts/transaction.rst:1
msgid "**Mosaic restriction**"
msgstr "**モザイク制限**"

#: ../../source/concepts/transaction.rst:1
msgid "Set a global restriction to a mosaic."
msgstr "モザイクにグローバル制限の設定"

#: ../../source/concepts/transaction.rst:1
msgid "Set a mosaic restriction to a specific address."
msgstr "特定のアドレスにモザイク制限を設定"

#: ../../source/concepts/transaction.rst:1
msgid "Send mosaics and messages between two accounts."
msgstr "モザイクとメッセージを２つのアカウント間で送信します。"

#: ../../source/concepts/transaction.rst:58
msgid "Defining a transaction"
msgstr "トランザクションの定義"

#: ../../source/concepts/transaction.rst:60
msgid ""
"Transactions are defined in a `serialized "
"<https://github.com/nemtech/catbuffer>`_ form. Each transaction extends from"
" the :ref:`transaction schema definition <transaction>`, combining the "
"type's particular properties. You can find the description of the additional"
" properties under the :ref:`\"Schema\" section <transfer-transaction>`, at "
"the end of each built-in feature description."
msgstr ""
"トランザクションは `シリアライズ済み <https://github.com/nemtech/catbuffer>`_ "
"形式で定義されます。各トランザクションは :ref:`トランザクション定義スキーマ <transaction>` "
"を継承し、型の特定のプロパティが組み合わされます。追加プロパティの説明は :ref:`\"スキーマ\" セクション <transfer-"
"transaction>` の下、それぞれの組み込み機能の説明の最後にあります。"

#: ../../source/concepts/transaction.rst:62
msgid ""
"We recommend `using the NEM2-SDK to define "
"<https://github.com/nemtech/nem2-docs/blob/master/source/resources/examples/typescript/transaction/SendingATransferTransaction.ts#L30>`_"
" transactions."
msgstr ""
"トランザクションを `NEM2-SDK を使用して定義する "
"<https://github.com/nemtech/nem2-docs/blob/master/source/resources/examples/typescript/transaction/SendingATransferTransaction.ts#L30>`_"
" ことを推奨しています。"

#: ../../source/concepts/transaction.rst:102
msgid "Signing a transaction"
msgstr "トランザクションへの署名"

#: ../../source/concepts/transaction.rst:104
msgid ""
"Accounts must sign transactions before announcing them to the network. "
"`Signing a transaction "
"<https://github.com/nemtech/nem2-docs/blob/master/source/resources/examples/typescript/transaction/SendingATransferTransaction.ts#L40>`_"
" expresses the account's agreement to change the network state as defined."
msgstr ""
"アカウントはトランザクションをネットワークにアナウンスする前に、トランザクションに署名する必要があります。 `トランザクションに署名  "
"<https://github.com/nemtech/nem2-docs/blob/master/source/resources/examples/typescript/transaction/SendingATransferTransaction.ts#L40>`_"
" することは、定義されたとおりにネットワークの状態を変更することにアカウントが同意したと示されます。"

#: ../../source/concepts/transaction.rst:106
msgid ""
"For example, a TransferTransaction describes who is the recipient and the "
"quantity of mosaics to transfer. In this case, signing the transaction means"
" to accept moving those mosaics from one account's balance to another."
msgstr ""
"例えば、TransferTransaction "
"には受信者が誰であるかと、転送するモザイクの量が記述されます。この場合、トランザクションに署名することは、それらのモザイクをあるアカウントの残高から他方のアカウントに移動することに同意することを意味します。"

#: ../../source/concepts/transaction.rst:108
msgid ""
"An account has to follow the next steps to `sign a transaction "
"<https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/transaction/Transaction.ts#L213>`_:"
msgstr ""
"アカウントは `トランザクションへ署名 <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/transaction/Transaction.ts#L213>`_ "
"をするために次のステップに従う必要があります:"

#: ../../source/concepts/transaction.rst:110
msgid ""
"Get the ``signing bytes``, which are all the bytes of the transaction except"
" the size, signature and signer."
msgstr "サイズ、署名、および署名者以外のトランザクションのすべてのバイトである ``署名バイト`` を取得します。"

#: ../../source/concepts/transaction.rst:111
msgid ""
"Get the nemesis block generation hash. You can query ``nodeUrl + "
"'/block/1'`` and copy ``meta.generationHash`` value."
msgstr ""
"ネメシスブロックのジェネレーションハッシュを取得してください。``nodeUrl + '/block/1'`` にアクセスして "
"``meta.generationHash`` の値をコピーします。"

#: ../../source/concepts/transaction.rst:112
msgid "Prepend the nemesis block generation hash to the signing bytes."
msgstr "署名バイトにネメシスブロックのジェネレーションハッシュを接頭します。"

#: ../../source/concepts/transaction.rst:113
msgid ""
"Sign the resulting string with the signer's private key. This will give you "
"the transaction ``signature``."
msgstr "署名者の秘密鍵で結果文字列に署名します。これはトランザクションに ``署名`` を与えます。"

#: ../../source/concepts/transaction.rst:114
msgid ""
"Append the signer's signature and public key to the transaction to obtain "
"the ``payload``."
msgstr "署名者の署名と公開鍵をトランザクションに追加して ``ペイロード`` を取得します。"

#: ../../source/concepts/transaction.rst:115
msgid ""
"Calculate the `hash of the transaction <https://github.com/nemtech/nem2-sdk-"
"typescript-"
"javascript/blob/master/src/model/transaction/Transaction.ts#L124>`_ by "
"applying the network hashing algorithm to the first 32 bytes of signature, "
"the signer public key, nemesis block generation hash, and the remaining "
"transaction payload."
msgstr ""
"署名の最初の 32 バイト、署名者公開鍵、ネメシスブロックジェネレーションハッシュ、残りのトランザクションペイロードにハッシュアルゴリズムを適用して "
"`トランザクションのハッシュ <https://github.com/nemtech/nem2-sdk-typescript-"
"javascript/blob/master/src/model/transaction/Transaction.ts#L124>`_ を計算します。"

#: ../../source/concepts/transaction.rst:150
msgid "Announcing a transaction"
msgstr "トランザクションのアナウンス"

#: ../../source/concepts/transaction.rst:152
msgid ""
"Signed transactions are ready to be announced to the network. You can either"
" use the SDK ``TransactionHttp`` service or append the payload to the "
"request of the `transaction endpoint "
"<https://nemtech.github.io/nem2-openapi/#operation/announceTransaction>`_."
msgstr ""
"署名されたトランザクションはネットワークにアナウンスする準備ができています。SDK ``TransactionHttp`` "
"サービスを使用するか、ペイロードを `トランザクションエンドポイント "
"<https://nemtech.github.io/nem2-openapi/#operation/announceTransaction>`_ "
"のリクエストに追加することができます。"

#: ../../source/concepts/transaction.rst:170
msgid ""
"After announcing the transaction, the REST API will always return an OK "
"response immediately. At this point, it is still unknown whether the "
"transaction is valid."
msgstr "トランザクションのアナウンスをすると、REST API は常にOKをすぐに返します。この時点ではトランザクションが正当かどうかは不明です。"

#: ../../source/concepts/transaction.rst:176
msgid "Transaction cycle"
msgstr "トランザクションサイクル"

#: ../../source/concepts/transaction.rst:178
msgid ""
"The first stage of validation happens in the API nodes. If the transaction "
"presents some error, the WebSocket throws a notification through the status "
"channel. In the positive case, the transaction reaches the P2P network with "
"an **unconfirmed** status.  Never rely on a transaction which has an "
"unconfirmed state. It is not clear if it will get included in a block, as it"
" should pass a second validation."
msgstr ""
"バリデーションの初回ステージは API ノードで行われます。トランザクションが何らかのエラーを含んでいる場合、WebSocket "
"はステータスチャンネルへ通知を投げます。良いケースの場合、トランザクションは P2P ネットワークへ **未承認** "
"ステータスとして到達します。未承認状態のトランザクションを信頼してはいけません。2つ目のバリデーションを通過しないといけないので、これがブロックに取り込まれるかどうかは不明です。"

#: ../../source/concepts/transaction.rst:180
msgid ""
"The second validation is done before the transaction is added in a "
":doc:`harvested block <block>`. If valid, the harvester stores the "
"transaction in a block, and it reaches the **confirmed** status."
msgstr ""
"トランザクションが :doc:`ハーベストされたブロック <block>` "
"に追加される前に、2つ目のバリデーションは完了します。妥当な場合、ハーベスターはブロックにトランザクションを保存し、それは **承認済み** "
"のステータスとなります。"

#: ../../source/concepts/transaction.rst:182
msgid ""
"Continuing the previous example, the transaction gets processed and the "
"amount stated gets transferred from the signer's account to the recipient's "
"account. Additionally, the transaction fee is deducted from the signer's "
"account."
msgstr ""
"前述した事例の続きとして、そのトランザクションが処理され、設定された総量が署名者のアカウントから受信者のアカウントへ振り込まれた状態になります。さらに、トランザクション手数料は署名者のアカウントから差し引かれます。"

#: ../../source/concepts/transaction.rst:184
msgid ""
"The transaction has **zero confirmations** at this point. When another block"
" is added to the blockchain, the transaction has one confirmation. The next "
"block added to the chain will give it two confirmations and so on."
msgstr ""
"この時点でトランザクションの **承認数はゼロ** "
"です。ブロックチェーンに別のブロックが追加されると、トランザクションは1つ目の承認を得ます。チェーンに追加された次のブロックが2つ目の承認を与え、続いていきます。"

#: ../../source/concepts/transaction.rst:190
msgid "Rollbacks"
msgstr "ロールバック"

#: ../../source/concepts/transaction.rst:192
msgid ""
"Blockchains are designed in a way that under certain circumstances recent "
"blocks need to be rolled back. These are essential to resolve forks of the "
"blockchain."
msgstr ""
"ブロックチェーンは特定の状況下において、最近のブロックをロールバックする必要があるように設計されています。これらはブロックチェーンのフォークを解決するために不可欠なものです。"

#: ../../source/concepts/transaction.rst:194
msgid ""
"The rewrite limit is the maximum number of blocks that can be rolled back. "
"Hence, forks can only be resolved up to a certain depth too."
msgstr "書き換え制限とはロールバック可能なブロックの最大数です。したがって、フォークは特定の深さまでしか解決できません。"

#: ../../source/concepts/transaction.rst:196
msgid ""
"Catapult's public network has a rewrite limit of ``398`` blocks, being this "
"limit :ref:`configurable per network <config-network-properties>`. Once a "
"transaction has more than ``maxRollBackConfirmations`` value, it cannot be "
"reversed."
msgstr ""
"Catapult パブリックネットワークでは書き換え限界を ``398`` ブロックとしています。この限界は :ref:`ネットワークごとに設定可能 "
"<config-network-properties>` です。トランザクションが ``maxRollBackConfirmations`` "
"値以上の承認を得ると、元に戻すことはできません。"

#: ../../source/concepts/transaction.rst:202
msgid "Guides"
msgstr "ガイド"

#: ../../source/concepts/transaction.rst:214
msgid "Transaction schemas"
msgstr "トランザクションスキーマ"

#: ../../source/concepts/transaction.rst:221
msgid "Serialization of a transaction."
msgstr "トランザクションのシリアル化"

#: ../../source/concepts/transaction.rst:223
#: ../../source/concepts/transaction.rst:243
#: ../../source/concepts/transaction.rst:260
msgid "**Inlines**:"
msgstr "**インライン**"

#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
#: ../../source/concepts/transaction.rst:1
msgid "Property"
msgstr "プロパティ"

#: ../../source/concepts/transaction.rst:1
msgid "Maximum fee allowed to spend for the transaction."
msgstr "トランザクションに最大の手数料を支払うことが許可されています。"

#: ../../source/concepts/transaction.rst:1
msgid ""
"Number of milliseconds elapsed since the creation of the nemesis block. If a"
" transaction does not get included in a block before the deadline is "
"reached, it is deleted. Deadlines are only allowed to lie up to ``24`` hours"
" ahead."
msgstr ""
"ネメシスブロックが作成されてから経過したミリ秒数。期限までにトランザクションがブロックに含まれなかった場合は削除されます。デッドラインは ``24`` "
"時間先までが許容されています。"

#: ../../source/concepts/transaction.rst:241
msgid "Binary layout for an embedded transaction header."
msgstr "埋め込みトランザクションヘッダーのバイナリレイアウト。"

#: ../../source/concepts/transaction.rst:1
msgid ""
"Reserved padding to align end of EmbeddedTransactionHeader on 8-byte "
"boundary."
msgstr "EmbeddedTransactionHeader の終わりを 8 バイト境界に揃えた予約パディング"

#: ../../source/concepts/transaction.rst:258
msgid ""
"Serialization of an :doc:`aggregate <aggregate-transaction>` inner "
"transaction."
msgstr ":doc:`アグリゲート <aggregate-transaction>` インナートランザクションのシリアル化"

#: ../../source/concepts/transaction.rst:274
msgid "Serialization of an entity that has a prefixed size."
msgstr "サイズをプレフィックスしたエンティティのシリアル化"

#: ../../source/concepts/transaction.rst:1
msgid "Size of the transaction."
msgstr "トランザクションのサイズ"

#: ../../source/concepts/transaction.rst:287
msgid "Serialization of an entity that should be signed by an account."
msgstr "アカウントによって署名されるべきエンティティのシリアル化。"

#: ../../source/concepts/transaction.rst:1
msgid "reserved padding to align Signature on 8-byte boundary."
msgstr "Signature を 8 バイト境界に揃えた予約パディング"

#: ../../source/concepts/transaction.rst:1
msgid "Entity signature generated by the signer."
msgstr "署名者により生成されたエンティティの署名。"

#: ../../source/concepts/transaction.rst:301
msgid ""
"Serialization of an entity. An entity could be a block or a "
":doc:`transaction <transaction>`."
msgstr "エンティティのシリアル化。エンティティはブロックまたは :doc:`トランザクション <transaction>` です。"

#: ../../source/concepts/transaction.rst:1
msgid "Public key of the signer of the entity."
msgstr "エンティティの署名者の公開鍵"

#: ../../source/concepts/transaction.rst:1
msgid "Reserved padding to align end of EntityBody on 8-byte boundary."
msgstr "EntityBody の終わりを 8 バイト境界に揃えた予約パディング"

#: ../../source/concepts/transaction.rst:1
msgid "Version of the structure."
msgstr "構造体のバージョン"

#: ../../source/concepts/transaction.rst:1
msgid "Entity network."
msgstr "エンティティネットワーク"

#: ../../source/concepts/transaction.rst:1
msgid "Entity type."
msgstr "エンティティタイプ"

#: ../../source/concepts/transaction.rst:1
msgid "(MAIN_NET) Public network."
msgstr "(MAIN_NET) パブリックネットワーク"

#: ../../source/concepts/transaction.rst:1
msgid "(TEST_NET) Public test network."
msgstr "(TEST_NET) パブリックテストネットワーク"

#: ../../source/concepts/transaction.rst:1
msgid "(MIJIN) Private network."
msgstr "(MIJIN) プライベートネットワーク"

#: ../../source/concepts/transaction.rst:1
msgid "(MIJIN_TEST) Private test network."
msgstr "(MIJIN_TEST) プライベートテストネットワーク"

#: ../../source/concepts/transaction.rst:1
msgid "Reserved."
msgstr "予約済み"

#: ../../source/concepts/transaction.rst:342
msgid "Continue: :doc:`Fees <fees>`."
msgstr "次へ: :doc:`手数料 <fees>`"
